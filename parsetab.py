
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F77338974B845AF01604467710543D57'
    
_lr_action_items = {'ATRIBUICAO':([33,],[52,]),'INTEIRO':([0,5,7,8,14,17,23,26,28,31,32,34,35,36,38,40,41,45,46,47,48,50,51,52,54,55,64,66,67,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,101,107,109,111,114,115,116,117,119,121,124,126,127,128,130,],[3,-5,3,3,-6,3,-53,3,3,3,-11,-13,-10,-15,3,57,-17,-12,-14,-8,-16,3,57,57,-9,57,57,3,57,57,-48,-49,-38,-41,-45,57,57,-39,-37,-44,-40,3,-7,57,-25,3,57,57,-29,-19,-18,3,-26,-28,-27,-24,3,-22,3,-23,]),'ID':([1,2,3,9,11,12,23,25,28,31,32,34,35,36,38,40,41,45,46,47,48,49,50,51,52,54,55,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,91,97,98,101,107,109,111,114,115,116,117,119,121,124,126,127,128,130,],[-58,10,-57,-56,18,10,-53,29,33,33,-11,-13,-10,-15,33,59,-17,-12,-14,-8,-16,68,33,72,59,-9,75,59,90,33,93,59,-48,-49,-38,-41,-45,59,59,-39,-37,-44,-40,33,113,-25,33,59,72,-29,-19,-18,33,-26,-28,-27,-24,33,-22,33,-23,]),'ENTAO':([56,57,58,59,60,61,62,63,102,103,104,105,],[-21,-20,-46,-50,76,-42,-51,-35,-47,-43,-36,-52,]),'ABRE_PAR':([10,16,33,39,40,42,44,52,64,67,77,78,79,80,81,82,83,84,85,86,87,88,93,107,],[17,19,51,55,64,65,67,64,64,64,64,-48,-49,-38,-41,-45,64,64,-39,-37,-44,-40,109,64,]),'DIVISAO':([56,57,58,59,61,62,93,102,103,105,],[-21,-20,-46,-50,79,-51,-50,-47,79,-52,]),'FLUTUANTE':([0,5,7,8,14,17,23,26,28,31,32,34,35,36,38,40,41,45,46,47,48,50,51,52,54,55,64,66,67,77,78,79,80,81,82,83,84,85,86,87,88,91,95,97,98,101,107,109,111,114,115,116,117,119,121,124,126,127,128,130,],[1,-5,1,1,-6,1,-53,1,1,1,-11,-13,-10,-15,1,56,-17,-12,-14,-8,-16,1,56,56,-9,56,56,1,56,56,-48,-49,-38,-41,-45,56,56,-39,-37,-44,-40,1,-7,56,-25,1,56,56,-29,-19,-18,1,-26,-28,-27,-24,1,-22,1,-23,]),'MENOR_IGUAL':([56,57,58,59,61,62,63,93,102,103,105,],[-21,-20,-46,-50,-42,-51,88,-50,-47,-43,-52,]),'MENOR':([56,57,58,59,61,62,63,93,102,103,105,],[-21,-20,-46,-50,-42,-51,80,-50,-47,-43,-52,]),'SENAO':([23,32,34,35,36,41,45,46,47,48,54,98,111,114,115,116,117,119,121,124,127,130,],[-53,-11,-13,-10,-15,-17,-12,-14,-8,-16,-9,-25,-29,-19,-18,122,-26,-28,-27,-24,-22,-23,]),'ATE':([23,32,34,35,36,41,45,46,47,48,54,91,98,111,114,115,117,119,121,124,127,130,],[-53,-11,-13,-10,-15,-17,-12,-14,-8,-16,-9,107,-25,-29,-19,-18,-26,-28,-27,-24,-22,-23,]),'FECHA_PAR':([19,21,29,56,57,58,59,61,62,63,68,70,71,72,74,75,89,90,92,93,94,102,103,104,105,112,113,120,125,],[24,27,-55,-21,-20,-46,-50,-42,-51,-35,-54,96,-34,-33,99,100,105,106,108,-50,110,-47,-43,-36,-52,-32,-31,125,-30,]),'MULT':([56,57,58,59,61,62,93,102,103,105,],[-21,-20,-46,-50,78,-51,-50,-47,78,-52,]),'NOVA_LINHA':([18,24,27,43,56,57,58,59,61,62,63,69,73,76,96,99,100,102,103,104,105,106,108,110,118,122,123,129,],[23,28,31,66,-21,-20,-46,-50,-42,-51,-35,95,98,101,111,114,115,-47,-43,-36,-52,117,119,121,124,126,127,130,]),'RETORNA':([23,28,31,32,34,35,36,38,41,45,46,47,48,50,54,66,91,98,101,111,114,115,116,117,119,121,124,126,127,128,130,],[-53,39,39,-11,-13,-10,-15,39,-17,-12,-14,-8,-16,39,-9,39,39,-25,39,-29,-19,-18,39,-26,-28,-27,-24,39,-22,39,-23,]),'SE':([23,28,31,32,34,35,36,38,41,45,46,47,48,50,54,66,91,98,101,111,114,115,116,117,119,121,124,126,127,128,130,],[-53,40,40,-11,-13,-10,-15,40,-17,-12,-14,-8,-16,40,-9,40,40,-25,40,-29,-19,-18,40,-26,-28,-27,-24,40,-22,40,-23,]),'LEIA':([23,28,31,32,34,35,36,38,41,45,46,47,48,50,54,66,91,98,101,111,114,115,116,117,119,121,124,126,127,128,130,],[-53,42,42,-11,-13,-10,-15,42,-17,-12,-14,-8,-16,42,-9,42,42,-25,42,-29,-19,-18,42,-26,-28,-27,-24,42,-22,42,-23,]),'VIRGULA':([21,29,56,57,68,70,71,72,112,113,120,],[26,-55,-21,-20,-54,97,-34,-33,-32,-31,97,]),'PRINCIPAL':([9,],[16,]),'SOMA':([56,57,58,59,61,62,63,93,102,103,104,105,],[-21,-20,-46,-50,-42,-51,87,-50,-47,-43,87,-52,]),'REPITA':([23,28,31,32,34,35,36,38,41,45,46,47,48,50,54,66,91,98,101,111,114,115,116,117,119,121,124,126,127,128,130,],[-53,43,43,-11,-13,-10,-15,43,-17,-12,-14,-8,-16,43,-9,43,43,-25,43,-29,-19,-18,43,-26,-28,-27,-24,43,-22,43,-23,]),'FIM':([23,32,34,35,36,38,41,45,46,47,48,50,54,98,111,114,115,116,117,119,121,124,127,128,130,],[-53,-11,-13,-10,-15,53,-17,-12,-14,-8,-16,69,-9,-25,-29,-19,-18,123,-26,-28,-27,-24,-22,129,-23,]),'DOIS_PONTOS':([1,2,3,9,20,22,30,37,],[-58,11,-57,-56,25,-56,49,11,]),'ESCREVA':([23,28,31,32,34,35,36,38,41,45,46,47,48,50,54,66,91,98,101,111,114,115,116,117,119,121,124,126,127,128,130,],[-53,44,44,-11,-13,-10,-15,44,-17,-12,-14,-8,-16,44,-9,44,44,-25,44,-29,-19,-18,44,-26,-28,-27,-24,44,-22,44,-23,]),'MAIOR_IGUAL':([56,57,58,59,61,62,63,93,102,103,105,],[-21,-20,-46,-50,-42,-51,81,-50,-47,-43,-52,]),'SUB':([56,57,58,59,61,62,63,93,102,103,104,105,],[-21,-20,-46,-50,-42,-51,82,-50,-47,-43,82,-52,]),'MAIOR':([56,57,58,59,61,62,63,93,102,103,105,],[-21,-20,-46,-50,-42,-51,85,-50,-47,-43,-52,]),'VAZIO':([0,5,7,8,14,17,23,26,28,31,32,34,35,36,38,41,45,46,47,48,50,54,66,91,95,98,101,111,114,115,116,117,119,121,124,126,127,128,130,],[9,-5,9,9,-6,22,-53,22,22,22,-11,-13,-10,-15,22,-17,-12,-14,-8,-16,22,-9,22,22,-7,-25,22,-29,-19,-18,22,-26,-28,-27,-24,22,-22,22,-23,]),'IGUAL':([56,57,58,59,61,62,63,93,102,103,105,],[-21,-20,-46,-50,-42,-51,86,-50,-47,-43,-52,]),'$end':([4,6,13,15,53,],[-1,0,-2,-3,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'repita_decl':([28,31,38,50,66,91,101,116,126,128,],[32,32,32,32,32,32,32,32,32,32,]),'chamada_func_escreva':([67,],[92,]),'parametro_decl':([17,],[21,]),'leia_decl':([28,31,38,50,66,91,101,116,126,128,],[34,34,34,34,34,34,34,34,34,34,]),'mult_div':([61,103,],[77,77,]),'numero_decl':([40,51,52,55,64,67,77,83,84,97,107,109,],[62,71,62,74,62,62,62,62,62,112,62,71,]),'se_decl':([28,31,38,50,66,91,101,116,126,128,],[35,35,35,35,35,35,35,35,35,35,]),'compara_op':([63,],[84,]),'declara_var':([0,8,28,31,38,50,66,91,101,116,126,128,],[8,8,36,36,36,36,36,36,36,36,36,36,]),'func_loop':([0,8,],[7,7,]),'sequencia_decl':([28,31,66,101,126,],[38,50,91,116,128,]),'simples_exp':([40,52,64,67,84,107,],[63,63,63,63,104,63,]),'chamada_func':([28,31,38,50,66,91,101,116,126,128,],[41,41,41,41,41,41,41,41,41,41,]),'tipo':([0,7,8,17,26,28,31,38,50,66,91,101,116,126,128,],[2,12,2,20,30,37,37,37,37,37,37,37,37,37,37,]),'principal':([0,7,8,],[4,13,4,]),'fator':([40,52,64,67,77,83,84,107,],[58,58,58,58,102,58,58,58,]),'exp_decl':([40,52,64,67,107,],[60,73,89,94,118,]),'termo':([40,52,64,67,83,84,107,],[61,61,61,61,103,61,61,]),'func_decl':([0,7,8,],[5,14,5,]),'parametro_chama_func':([51,109,],[70,120,]),'atribuicao_decl':([28,31,38,50,66,91,101,116,126,128,],[45,45,45,45,45,45,45,45,45,45,]),'escreva_decl':([28,31,38,50,66,91,101,116,126,128,],[46,46,46,46,46,46,46,46,46,46,]),'programa':([0,8,],[6,15,]),'declaracao':([28,31,38,50,66,91,101,116,126,128,],[47,47,54,54,47,54,47,54,47,54,]),'soma_sub':([63,104,],[83,83,]),'retorna_decl':([28,31,38,50,66,91,101,116,126,128,],[48,48,48,48,48,48,48,48,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> principal','programa',1,'p_programa_1','parser.py',26),
  ('programa -> func_loop principal','programa',2,'p_programa_2','parser.py',31),
  ('programa -> declara_var programa','programa',2,'p_programa_3','parser.py',36),
  ('principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM','principal',7,'p_principal','parser.py',41),
  ('func_loop -> func_decl','func_loop',1,'p_func_loop_1','parser.py',46),
  ('func_loop -> func_loop func_decl','func_loop',2,'p_func_loop_2','parser.py',51),
  ('func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA','func_decl',9,'p_func_decl','parser.py',56),
  ('sequencia_decl -> declaracao','sequencia_decl',1,'p_sequencia_decl_1','parser.py',61),
  ('sequencia_decl -> sequencia_decl declaracao','sequencia_decl',2,'p_sequencia_decl_2','parser.py',66),
  ('declaracao -> se_decl','declaracao',1,'p_declaracao_1','parser.py',70),
  ('declaracao -> repita_decl','declaracao',1,'p_declaracao_2','parser.py',74),
  ('declaracao -> atribuicao_decl','declaracao',1,'p_declaracao_3','parser.py',78),
  ('declaracao -> leia_decl','declaracao',1,'p_declaracao_4','parser.py',82),
  ('declaracao -> escreva_decl','declaracao',1,'p_declaracao_5','parser.py',86),
  ('declaracao -> declara_var','declaracao',1,'p_declaracao_6','parser.py',90),
  ('declaracao -> retorna_decl','declaracao',1,'p_declaracao_7','parser.py',95),
  ('declaracao -> chamada_func','declaracao',1,'p_declaracao_8','parser.py',99),
  ('retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA','retorna_decl',5,'p_retorna_decl_1','parser.py',104),
  ('retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA','retorna_decl',5,'p_retorna_decl_2','parser.py',108),
  ('numero_decl -> INTEIRO','numero_decl',1,'p_numero_1','parser.py',112),
  ('numero_decl -> FLUTUANTE','numero_decl',1,'p_numero_2','parser.py',116),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA','se_decl',7,'p_se_decl_1','parser.py',120),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA','se_decl',10,'p_se_decl_2','parser.py',124),
  ('repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA','repita_decl',6,'p_repita_decl','parser.py',128),
  ('atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA','atribuicao_decl',4,'p_atribuicao_decl','parser.py',132),
  ('leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA','leia_decl',5,'p_leia_decl','parser.py',136),
  ('escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_1','parser.py',140),
  ('escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_2','parser.py',144),
  ('chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA','chamada_func',5,'p_chamada_func','parser.py',148),
  ('chamada_func_escreva -> ID ABRE_PAR parametro_chama_func FECHA_PAR','chamada_func_escreva',4,'p_chamada_func_escreva','parser.py',152),
  ('parametro_chama_func -> parametro_chama_func VIRGULA ID','parametro_chama_func',3,'p_parametro_chama_func_1','parser.py',156),
  ('parametro_chama_func -> parametro_chama_func VIRGULA numero_decl','parametro_chama_func',3,'p_parametro_chama_func_2','parser.py',160),
  ('parametro_chama_func -> ID','parametro_chama_func',1,'p_parametro_chama_func_3','parser.py',164),
  ('parametro_chama_func -> numero_decl','parametro_chama_func',1,'p_parametro_chama_func_4','parser.py',168),
  ('exp_decl -> simples_exp','exp_decl',1,'p_exp_decl_1','parser.py',172),
  ('exp_decl -> simples_exp compara_op simples_exp','exp_decl',3,'p_exp_decl_2','parser.py',176),
  ('compara_op -> IGUAL','compara_op',1,'p_compara_op_1','parser.py',180),
  ('compara_op -> MENOR','compara_op',1,'p_compara_op_2','parser.py',184),
  ('compara_op -> MAIOR','compara_op',1,'p_compara_op_3','parser.py',188),
  ('compara_op -> MENOR_IGUAL','compara_op',1,'p_compara_op_4','parser.py',192),
  ('compara_op -> MAIOR_IGUAL','compara_op',1,'p_compara_op_5','parser.py',196),
  ('simples_exp -> termo','simples_exp',1,'p_simples_exp_1','parser.py',200),
  ('simples_exp -> simples_exp soma_sub termo','simples_exp',3,'p_simples_exp_2','parser.py',204),
  ('soma_sub -> SOMA','soma_sub',1,'p_soma_sub_1','parser.py',208),
  ('soma_sub -> SUB','soma_sub',1,'p_soma_sub_2','parser.py',212),
  ('termo -> fator','termo',1,'p_termo_1','parser.py',216),
  ('termo -> termo mult_div fator','termo',3,'p_termo_2','parser.py',220),
  ('mult_div -> MULT','mult_div',1,'p_mult_div_1','parser.py',224),
  ('mult_div -> DIVISAO','mult_div',1,'p_mult_div_2','parser.py',228),
  ('fator -> ID','fator',1,'p_fator_1','parser.py',232),
  ('fator -> numero_decl','fator',1,'p_fator_2','parser.py',236),
  ('fator -> ABRE_PAR exp_decl FECHA_PAR','fator',3,'p_fator_3','parser.py',240),
  ('declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA','declara_var',4,'p_declara_var','parser.py',244),
  ('parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID','parametro_decl',5,'p_parametro_decl_1','parser.py',248),
  ('parametro_decl -> tipo DOIS_PONTOS ID','parametro_decl',3,'p_parametro_decl_2','parser.py',252),
  ('tipo -> VAZIO','tipo',1,'p_tipo_1','parser.py',256),
  ('tipo -> INTEIRO','tipo',1,'p_tipo_2','parser.py',260),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo_3','parser.py',264),
]
