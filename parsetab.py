
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '72832678224076C3526A9D806EBEF3A4'
    
_lr_action_items = {'MENOR':([54,55,56,58,60,61,64,98,100,102,],[-47,-46,-38,79,-48,-42,-46,-43,-39,-49,]),'ID':([2,3,4,8,12,16,23,24,27,28,29,30,36,37,38,39,40,41,42,45,47,48,49,50,51,52,59,62,63,67,74,75,76,78,79,80,81,82,83,84,85,86,90,93,94,96,97,99,104,105,106,107,109,110,111,113,117,118,119,122,],[-54,-53,-55,15,15,19,-50,33,46,-15,-16,-8,-13,33,-11,55,-12,-14,-10,33,64,33,55,69,73,-9,55,88,33,33,-45,-44,55,-41,-34,-40,55,-37,-36,-35,-33,55,104,55,-24,-18,-17,33,-29,111,-26,-27,-25,33,-30,-23,-21,33,33,-22,]),'INTEIRO':([0,1,7,9,13,18,23,24,25,28,29,30,36,37,38,39,40,41,42,45,47,48,49,51,52,59,63,67,74,75,76,78,79,80,81,82,83,84,85,86,93,94,96,97,99,103,106,107,109,110,113,117,118,119,122,],[2,2,2,-5,-6,2,-50,2,2,-15,-16,-8,-13,2,-11,54,-12,-14,-10,2,54,2,54,71,-9,54,2,2,-45,-44,54,-41,-34,-40,54,-37,-36,-35,-33,54,54,-24,-18,-17,2,-7,-26,-27,-25,2,-23,-21,2,2,-22,]),'FLUTUANTE':([0,1,7,9,13,18,23,24,25,28,29,30,36,37,38,39,40,41,42,45,47,48,49,51,52,59,63,67,74,75,76,78,79,80,81,82,83,84,85,86,93,94,96,97,99,103,106,107,109,110,113,117,118,119,122,],[4,4,4,-5,-6,4,-50,4,4,-15,-16,-8,-13,4,-11,60,-12,-14,-10,4,60,4,60,72,-9,60,4,4,-45,-44,60,-41,-34,-40,60,-37,-36,-35,-33,60,60,-24,-18,-17,4,-7,-26,-27,-25,4,-23,-21,4,4,-22,]),'ATE':([23,28,29,30,36,38,40,41,42,52,67,94,96,97,106,107,109,113,117,122,],[-50,-15,-16,-8,-13,-11,-12,-14,-10,-9,93,-24,-18,-17,-26,-27,-25,-23,-21,-22,]),'ESCREVA':([23,24,28,29,30,36,37,38,40,41,42,45,48,52,63,67,94,96,97,99,106,107,109,110,113,117,118,119,122,],[-50,31,-15,-16,-8,-13,31,-11,-12,-14,-10,31,31,-9,31,31,-24,-18,-17,31,-26,-27,-25,31,-23,-21,31,31,-22,]),'VIRGULA':([21,46,88,],[25,-52,-51,]),'REPITA':([23,24,28,29,30,36,37,38,40,41,42,45,48,52,63,67,94,96,97,99,106,107,109,110,113,117,118,119,122,],[-50,32,-15,-16,-8,-13,32,-11,-12,-14,-10,32,32,-9,32,32,-24,-18,-17,32,-26,-27,-25,32,-23,-21,32,32,-22,]),'NOVA_LINHA':([19,20,23,26,28,29,30,32,36,38,40,41,42,52,54,55,56,58,60,61,68,77,89,91,92,94,95,96,97,98,100,101,102,106,107,108,109,110,113,115,116,117,119,121,122,],[23,24,-50,45,-15,-16,-8,48,-13,-11,-12,-14,-10,-9,-47,-46,-38,-31,-48,-42,94,99,103,106,107,-24,109,-18,-17,-43,-39,-32,-49,-26,-27,113,-25,114,-23,117,118,-21,120,122,-22,]),'ABRE_PAR':([14,15,31,34,35,39,47,49,59,64,74,75,76,78,79,80,81,82,83,84,85,86,93,],[17,18,47,50,51,59,59,59,59,90,-45,-44,59,-41,-34,-40,59,-37,-36,-35,-33,59,59,]),'PRINCIPAL':([2,3,4,8,12,],[-54,-53,-55,14,14,]),'$end':([5,6,10,11,53,],[-1,0,-3,-2,-4,]),'LEIA':([23,24,28,29,30,36,37,38,40,41,42,45,48,52,63,67,94,96,97,99,106,107,109,110,113,117,118,119,122,],[-50,34,-15,-16,-8,-13,34,-11,-12,-14,-10,34,34,-9,34,34,-24,-18,-17,34,-26,-27,-25,34,-23,-21,34,34,-22,]),'RETORNA':([23,24,28,29,30,36,37,38,40,41,42,45,48,52,63,67,94,96,97,99,106,107,109,110,113,117,118,119,122,],[-50,35,-15,-16,-8,-13,35,-11,-12,-14,-10,35,35,-9,35,35,-24,-18,-17,35,-26,-27,-25,35,-23,-21,35,35,-22,]),'SOMA':([54,55,56,58,60,61,64,98,100,101,102,],[-47,-46,-38,80,-48,-42,-46,-43,-39,80,-49,]),'DIVISAO':([54,55,56,60,61,64,98,100,102,],[-47,-46,74,-48,-42,-46,-43,74,-49,]),'MENOR_IGUAL':([54,55,56,58,60,61,64,98,100,102,],[-47,-46,-38,83,-48,-42,-46,-43,-39,-49,]),'VAZIO':([0,1,7,9,13,18,23,24,25,28,29,30,36,37,38,40,41,42,45,48,52,63,67,94,96,97,99,103,106,107,109,110,113,117,118,119,122,],[3,3,3,-5,-6,3,-50,3,3,-15,-16,-8,-13,3,-11,-12,-14,-10,3,3,-9,3,3,-24,-18,-17,3,-7,-26,-27,-25,3,-23,-21,3,3,-22,]),'SE':([23,24,28,29,30,36,37,38,40,41,42,45,48,52,63,67,94,96,97,99,106,107,109,110,113,117,118,119,122,],[-50,39,-15,-16,-8,-13,39,-11,-12,-14,-10,39,39,-9,39,39,-24,-18,-17,39,-26,-27,-25,39,-23,-21,39,39,-22,]),'ATRIBUICAO':([33,],[49,]),'ENTAO':([54,55,56,57,58,60,61,98,100,101,102,],[-47,-46,-38,77,-31,-48,-42,-43,-39,-32,-49,]),'IGUAL':([54,55,56,58,60,61,64,98,100,102,],[-47,-46,-38,85,-48,-42,-46,-43,-39,-49,]),'FECHA_PAR':([17,21,46,54,55,56,58,60,61,64,65,66,69,70,71,72,73,87,88,98,100,101,102,104,105,111,112,],[20,26,-52,-47,-46,-38,-31,-48,-42,-46,91,92,95,96,-19,-20,97,102,-51,-43,-39,-32,-49,-29,112,-30,-28,]),'SENAO':([114,],[116,]),'FIM':([23,28,29,30,36,37,38,40,41,42,52,63,94,96,97,106,107,109,113,114,117,120,122,],[-50,-15,-16,-8,-13,53,-11,-12,-14,-10,-9,89,-24,-18,-17,-26,-27,-25,-23,115,-21,121,-22,]),'MAIOR_IGUAL':([54,55,56,58,60,61,64,98,100,102,],[-47,-46,-38,82,-48,-42,-46,-43,-39,-49,]),'MAIOR':([54,55,56,58,60,61,64,98,100,102,],[-47,-46,-38,84,-48,-42,-46,-43,-39,-49,]),'DOIS_PONTOS':([2,3,4,8,22,43,44,],[-54,-53,-55,16,27,16,62,]),'SUB':([54,55,56,58,60,61,64,98,100,101,102,],[-47,-46,-38,78,-48,-42,-46,-43,-39,78,-49,]),'MULT':([54,55,56,60,61,64,98,100,102,],[-47,-46,75,-48,-42,-46,-43,75,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declara_var':([0,1,24,37,45,48,63,67,99,110,118,119,],[1,1,28,28,28,28,28,28,28,28,28,28,]),'declaracao':([24,37,45,48,63,67,99,110,118,119,],[30,52,30,30,52,52,30,52,30,52,]),'fator':([39,47,49,59,76,81,86,93,],[61,61,61,61,98,61,61,61,]),'retorna_decl':([24,37,45,48,63,67,99,110,118,119,],[29,29,29,29,29,29,29,29,29,29,]),'parametro_decl':([18,],[21,]),'exp_decl':([39,47,49,59,93,],[57,65,68,87,108,]),'simples_exp':([39,47,49,59,86,93,],[58,58,58,58,101,58,]),'repita_decl':([24,37,45,48,63,67,99,110,118,119,],[38,38,38,38,38,38,38,38,38,38,]),'chamada_func':([47,],[66,]),'soma_sub':([58,101,],[81,81,]),'mult_div':([56,100,],[76,76,]),'func_loop':([0,1,],[7,7,]),'leia_decl':([24,37,45,48,63,67,99,110,118,119,],[36,36,36,36,36,36,36,36,36,36,]),'sequencia_decl':([24,45,48,99,118,],[37,63,67,110,119,]),'numero_decl':([51,],[70,]),'termo':([39,47,49,59,81,86,93,],[56,56,56,56,100,56,56,]),'atribuicao_decl':([24,37,45,48,63,67,99,110,118,119,],[40,40,40,40,40,40,40,40,40,40,]),'principal':([0,1,7,],[5,5,11,]),'parametro_chama_func':([90,],[105,]),'programa':([0,1,],[6,10,]),'escreva_decl':([24,37,45,48,63,67,99,110,118,119,],[41,41,41,41,41,41,41,41,41,41,]),'se_decl':([24,37,45,48,63,67,99,110,118,119,],[42,42,42,42,42,42,42,42,42,42,]),'tipo':([0,1,7,18,24,25,37,45,48,63,67,99,110,118,119,],[8,8,12,22,43,44,43,43,43,43,43,43,43,43,43,]),'func_decl':([0,1,7,],[9,9,13,]),'compara_op':([58,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> principal','programa',1,'p_programa_1','parser.py',21),
  ('programa -> func_loop principal','programa',2,'p_programa_2','parser.py',26),
  ('programa -> declara_var programa','programa',2,'p_programa_3','parser.py',31),
  ('principal -> tipo PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM','principal',7,'p_principal','parser.py',36),
  ('func_loop -> func_decl','func_loop',1,'p_func_loop_1','parser.py',41),
  ('func_loop -> func_loop func_decl','func_loop',2,'p_func_loop_2','parser.py',46),
  ('func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA','func_decl',9,'p_func_decl','parser.py',51),
  ('sequencia_decl -> declaracao','sequencia_decl',1,'p_sequencia_decl_1','parser.py',56),
  ('sequencia_decl -> sequencia_decl declaracao','sequencia_decl',2,'p_sequencia_decl_2','parser.py',61),
  ('declaracao -> se_decl','declaracao',1,'p_declaracao_1','parser.py',65),
  ('declaracao -> repita_decl','declaracao',1,'p_declaracao_2','parser.py',69),
  ('declaracao -> atribuicao_decl','declaracao',1,'p_declaracao_3','parser.py',73),
  ('declaracao -> leia_decl','declaracao',1,'p_declaracao_4','parser.py',77),
  ('declaracao -> escreva_decl','declaracao',1,'p_declaracao_5','parser.py',81),
  ('declaracao -> declara_var','declaracao',1,'p_declaracao_6','parser.py',85),
  ('declaracao -> retorna_decl','declaracao',1,'p_declaracao_7','parser.py',90),
  ('retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR','retorna_decl',4,'p_retorna_decl_1','parser.py',94),
  ('retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR','retorna_decl',4,'p_retorna_decl_2','parser.py',98),
  ('numero_decl -> INTEIRO','numero_decl',1,'p_numero_1','parser.py',102),
  ('numero_decl -> FLUTUANTE','numero_decl',1,'p_numero_2','parser.py',106),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl NOVA_LINHA FIM NOVA_LINHA','se_decl',8,'p_se_decl_1','parser.py',110),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl NOVA_LINHA SENAO NOVA_LINHA sequencia_decl NOVA_LINHA FIM NOVA_LINHA','se_decl',12,'p_se_decl_2','parser.py',114),
  ('repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA','repita_decl',6,'p_repita_decl','parser.py',118),
  ('atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA','atribuicao_decl',4,'p_atribuicao_decl','parser.py',122),
  ('leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA','leia_decl',5,'p_leia_decl','parser.py',126),
  ('escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_1','parser.py',130),
  ('escreva_decl -> ESCREVA ABRE_PAR chamada_func FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_2','parser.py',134),
  ('chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR','chamada_func',4,'p_chamada_func','parser.py',138),
  ('parametro_chama_func -> ID','parametro_chama_func',1,'p_parametro_chama_func_1','parser.py',142),
  ('parametro_chama_func -> parametro_chama_func ID','parametro_chama_func',2,'p_parametro_chama_func_2','parser.py',146),
  ('exp_decl -> simples_exp','exp_decl',1,'p_exp_decl_1','parser.py',150),
  ('exp_decl -> simples_exp compara_op simples_exp','exp_decl',3,'p_exp_decl_2','parser.py',154),
  ('compara_op -> IGUAL','compara_op',1,'p_compara_op_1','parser.py',158),
  ('compara_op -> MENOR','compara_op',1,'p_compara_op_2','parser.py',162),
  ('compara_op -> MAIOR','compara_op',1,'p_compara_op_3','parser.py',166),
  ('compara_op -> MENOR_IGUAL','compara_op',1,'p_compara_op_4','parser.py',170),
  ('compara_op -> MAIOR_IGUAL','compara_op',1,'p_compara_op_5','parser.py',174),
  ('simples_exp -> termo','simples_exp',1,'p_simples_exp_1','parser.py',178),
  ('simples_exp -> simples_exp soma_sub termo','simples_exp',3,'p_simples_exp_2','parser.py',182),
  ('soma_sub -> SOMA','soma_sub',1,'p_soma_sub_1','parser.py',186),
  ('soma_sub -> SUB','soma_sub',1,'p_soma_sub_2','parser.py',190),
  ('termo -> fator','termo',1,'p_termo_1','parser.py',194),
  ('termo -> termo mult_div fator','termo',3,'p_termo_2','parser.py',198),
  ('mult_div -> MULT','mult_div',1,'p_mult_div_1','parser.py',202),
  ('mult_div -> DIVISAO','mult_div',1,'p_mult_div_2','parser.py',206),
  ('fator -> ID','fator',1,'p_fator_1','parser.py',210),
  ('fator -> INTEIRO','fator',1,'p_fator_2','parser.py',214),
  ('fator -> FLUTUANTE','fator',1,'p_fator_3','parser.py',218),
  ('fator -> ABRE_PAR exp_decl FECHA_PAR','fator',3,'p_fator_4','parser.py',222),
  ('declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA','declara_var',4,'p_declara_var','parser.py',227),
  ('parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID','parametro_decl',5,'p_parametro_decl_1','parser.py',231),
  ('parametro_decl -> tipo DOIS_PONTOS ID','parametro_decl',3,'p_parametro_decl_2','parser.py',235),
  ('tipo -> VAZIO','tipo',1,'p_tipo_1','parser.py',239),
  ('tipo -> INTEIRO','tipo',1,'p_tipo_2','parser.py',243),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo_3','parser.py',247),
]
