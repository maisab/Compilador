
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D052544987F3E18A2DF6E4E2D1322C9C'
    
_lr_action_items = {'SE':([20,28,29,34,36,37,38,40,41,42,43,47,48,49,60,64,84,99,109,111,114,115,116,117,118,121,124,126,127,128,130,],[-53,32,32,-15,-11,-14,-12,-17,32,-16,-10,-8,-13,32,32,-9,32,32,-25,32,-27,-28,-19,-18,-29,-26,-24,32,-22,32,-23,]),'SUB':([52,53,55,56,57,58,59,85,96,97,98,100,],[-50,71,-42,-20,-46,-21,-51,-50,-52,-43,71,-47,]),'ABRE_PAR':([12,16,32,35,39,44,46,51,61,66,71,72,73,74,75,76,77,78,79,81,82,83,85,101,],[18,19,51,61,62,65,67,51,51,51,-45,-37,-44,-38,-41,-40,51,-39,51,51,-48,-49,102,51,]),'REPITA':([20,28,29,34,36,37,38,40,41,42,43,47,48,49,60,64,84,99,109,111,114,115,116,117,118,121,124,126,127,128,130,],[-53,33,33,-15,-11,-14,-12,-17,33,-16,-10,-8,-13,33,33,-9,33,33,-25,33,-27,-28,-19,-18,-29,-26,-24,33,-22,33,-23,]),'MAIOR_IGUAL':([52,53,55,56,57,58,59,85,96,97,100,],[-50,75,-42,-20,-46,-21,-51,-50,-52,-43,-47,]),'PRINCIPAL':([8,],[16,]),'SENAO':([20,34,36,37,38,40,42,43,47,48,64,109,111,114,115,116,117,118,121,124,127,130,],[-53,-15,-11,-14,-12,-17,-16,-10,-8,-13,-9,-25,122,-27,-28,-19,-18,-29,-26,-24,-22,-23,]),'ESCREVA':([20,28,29,34,36,37,38,40,41,42,43,47,48,49,60,64,84,99,109,111,114,115,116,117,118,121,124,126,127,128,130,],[-53,35,35,-15,-11,-14,-12,-17,35,-16,-10,-8,-13,35,35,-9,35,35,-25,35,-27,-28,-19,-18,-29,-26,-24,35,-22,35,-23,]),'MENOR':([52,53,55,56,57,58,59,85,96,97,100,],[-50,74,-42,-20,-46,-21,-51,-50,-52,-43,-47,]),'FECHA_PAR':([19,21,31,52,53,55,56,57,58,59,69,70,85,86,87,88,89,90,91,92,94,96,97,98,100,113,119,120,125,],[24,25,-55,-50,-35,-42,-20,-46,-21,-51,-54,96,-50,103,104,105,106,107,-34,-33,110,-52,-43,-36,-47,125,-31,-32,-30,]),'$end':([1,3,10,13,63,],[0,-1,-3,-2,-4,]),'INTEIRO':([0,2,4,6,14,18,20,26,28,29,32,34,36,37,38,40,41,42,43,47,48,49,51,60,61,62,64,65,66,71,72,73,74,75,76,77,78,79,81,82,83,84,95,99,101,102,108,109,111,114,115,116,117,118,121,124,126,127,128,130,],[9,9,-5,9,-6,9,-53,9,9,9,56,-15,-11,-14,-12,-17,9,-16,-10,-8,-13,9,56,9,56,56,-9,56,56,-45,-37,-44,-38,-41,-40,56,-39,56,56,-48,-49,9,-7,9,56,56,56,-25,9,-27,-28,-19,-18,-29,-26,-24,9,-22,9,-23,]),'MULT':([52,55,56,57,58,59,85,96,97,100,],[-50,82,-20,-46,-21,-51,-50,-52,82,-47,]),'FIM':([20,34,36,37,38,40,41,42,43,47,48,49,64,109,111,114,115,116,117,118,121,124,127,128,130,],[-53,-15,-11,-14,-12,-17,63,-16,-10,-8,-13,68,-9,-25,123,-27,-28,-19,-18,-29,-26,-24,-22,129,-23,]),'MENOR_IGUAL':([52,53,55,56,57,58,59,85,96,97,100,],[-50,76,-42,-20,-46,-21,-51,-50,-52,-43,-47,]),'FLUTUANTE':([0,2,4,6,14,18,20,26,28,29,32,34,36,37,38,40,41,42,43,47,48,49,51,60,61,62,64,65,66,71,72,73,74,75,76,77,78,79,81,82,83,84,95,99,101,102,108,109,111,114,115,116,117,118,121,124,126,127,128,130,],[7,7,-5,7,-6,7,-53,7,7,7,58,-15,-11,-14,-12,-17,7,-16,-10,-8,-13,7,58,7,58,58,-9,58,58,-45,-37,-44,-38,-41,-40,58,-39,58,58,-48,-49,7,-7,7,58,58,58,-25,7,-27,-28,-19,-18,-29,-26,-24,7,-22,7,-23,]),'RETORNA':([20,28,29,34,36,37,38,40,41,42,43,47,48,49,60,64,84,99,109,111,114,115,116,117,118,121,124,126,127,128,130,],[-53,39,39,-15,-11,-14,-12,-17,39,-16,-10,-8,-13,39,39,-9,39,39,-25,39,-27,-28,-19,-18,-29,-26,-24,39,-22,39,-23,]),'DOIS_PONTOS':([5,7,8,9,22,23,30,45,],[11,-58,-56,-57,27,-56,50,11,]),'ID':([5,7,8,9,11,15,20,27,28,29,32,34,36,37,38,40,41,42,43,47,48,49,50,51,60,61,62,64,65,66,67,71,72,73,74,75,76,77,78,79,81,82,83,84,99,101,102,108,109,111,114,115,116,117,118,121,124,126,127,128,130,],[12,-58,-56,-57,17,12,-53,31,44,44,52,-15,-11,-14,-12,-17,44,-16,-10,-8,-13,44,69,52,44,85,89,-9,92,52,94,-45,-37,-44,-38,-41,-40,52,-39,52,52,-48,-49,44,44,52,92,119,-25,44,-27,-28,-19,-18,-29,-26,-24,44,-22,44,-23,]),'DIVISAO':([52,55,56,57,58,59,85,96,97,100,],[-50,83,-20,-46,-21,-51,-50,-52,83,-47,]),'ATE':([20,34,36,37,38,40,42,43,47,48,64,84,109,114,115,116,117,118,121,124,127,130,],[-53,-15,-11,-14,-12,-17,-16,-10,-8,-13,-9,101,-25,-27,-28,-19,-18,-29,-26,-24,-22,-23,]),'MAIOR':([52,53,55,56,57,58,59,85,96,97,100,],[-50,78,-42,-20,-46,-21,-51,-50,-52,-43,-47,]),'IGUAL':([52,53,55,56,57,58,59,85,96,97,100,],[-50,72,-42,-20,-46,-21,-51,-50,-52,-43,-47,]),'VIRGULA':([21,31,56,58,69,90,91,92,113,119,120,],[26,-55,-20,-21,-54,108,-34,-33,108,-31,-32,]),'ENTAO':([52,53,54,55,56,57,58,59,96,97,98,100,],[-50,-35,80,-42,-20,-46,-21,-51,-52,-43,-36,-47,]),'NOVA_LINHA':([17,24,25,33,52,53,55,56,57,58,59,68,80,93,96,97,98,100,103,104,105,106,107,110,112,122,123,129,],[20,28,29,60,-50,-35,-42,-20,-46,-21,-51,95,99,109,-52,-43,-36,-47,114,115,116,117,118,121,124,126,127,130,]),'SOMA':([52,53,55,56,57,58,59,85,96,97,98,100,],[-50,73,-42,-20,-46,-21,-51,-50,-52,-43,73,-47,]),'LEIA':([20,28,29,34,36,37,38,40,41,42,43,47,48,49,60,64,84,99,109,111,114,115,116,117,118,121,124,126,127,128,130,],[-53,46,46,-15,-11,-14,-12,-17,46,-16,-10,-8,-13,46,46,-9,46,46,-25,46,-27,-28,-19,-18,-29,-26,-24,46,-22,46,-23,]),'ATRIBUICAO':([44,],[66,]),'VAZIO':([0,2,4,6,14,18,20,26,28,29,34,36,37,38,40,41,42,43,47,48,49,60,64,84,95,99,109,111,114,115,116,117,118,121,124,126,127,128,130,],[8,8,-5,8,-6,23,-53,23,23,23,-15,-11,-14,-12,-17,23,-16,-10,-8,-13,23,23,-9,23,-7,23,-25,23,-27,-28,-19,-18,-29,-26,-24,23,-22,23,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,10,]),'declara_var':([0,2,28,29,41,49,60,84,99,111,126,128,],[2,2,34,34,34,34,34,34,34,34,34,34,]),'exp_decl':([32,51,61,66,101,],[54,70,86,93,112,]),'termo':([32,51,61,66,77,79,101,],[55,55,55,55,97,55,55,]),'repita_decl':([28,29,41,49,60,84,99,111,126,128,],[36,36,36,36,36,36,36,36,36,36,]),'fator':([32,51,61,66,77,79,81,101,],[57,57,57,57,57,57,100,57,]),'func_decl':([0,2,6,],[4,4,14,]),'tipo':([0,2,6,18,26,28,29,41,49,60,84,99,111,126,128,],[5,5,15,22,30,45,45,45,45,45,45,45,45,45,45,]),'escreva_decl':([28,29,41,49,60,84,99,111,126,128,],[37,37,37,37,37,37,37,37,37,37,]),'atribuicao_decl':([28,29,41,49,60,84,99,111,126,128,],[38,38,38,38,38,38,38,38,38,38,]),'soma_sub':([53,98,],[77,77,]),'chamada_func':([28,29,41,49,60,84,99,111,126,128,],[40,40,40,40,40,40,40,40,40,40,]),'sequencia_decl':([28,29,60,99,126,],[41,49,84,111,128,]),'chamada_func_escreva':([61,],[87,]),'parametro_chama_func':([65,102,],[90,113,]),'retorna_decl':([28,29,41,49,60,84,99,111,126,128,],[42,42,42,42,42,42,42,42,42,42,]),'se_decl':([28,29,41,49,60,84,99,111,126,128,],[43,43,43,43,43,43,43,43,43,43,]),'numero_decl':([32,51,61,62,65,66,77,79,81,101,102,108,],[59,59,59,88,91,59,59,59,59,59,91,120,]),'simples_exp':([32,51,61,66,79,101,],[53,53,53,53,98,53,]),'parametro_decl':([18,],[21,]),'mult_div':([55,97,],[81,81,]),'principal':([0,2,6,],[3,3,13,]),'compara_op':([53,],[79,]),'func_loop':([0,2,],[6,6,]),'declaracao':([28,29,41,49,60,84,99,111,126,128,],[47,47,64,64,47,64,47,64,47,64,]),'leia_decl':([28,29,41,49,60,84,99,111,126,128,],[48,48,48,48,48,48,48,48,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> principal','programa',1,'p_programa_1','parser.py',26),
  ('programa -> func_loop principal','programa',2,'p_programa_2','parser.py',31),
  ('programa -> declara_var programa','programa',2,'p_programa_3','parser.py',36),
  ('principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM','principal',7,'p_principal','parser.py',41),
  ('func_loop -> func_decl','func_loop',1,'p_func_loop_1','parser.py',46),
  ('func_loop -> func_loop func_decl','func_loop',2,'p_func_loop_2','parser.py',51),
  ('func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA','func_decl',9,'p_func_decl','parser.py',56),
  ('sequencia_decl -> declaracao','sequencia_decl',1,'p_sequencia_decl_1','parser.py',61),
  ('sequencia_decl -> sequencia_decl declaracao','sequencia_decl',2,'p_sequencia_decl_2','parser.py',66),
  ('declaracao -> se_decl','declaracao',1,'p_declaracao_1','parser.py',70),
  ('declaracao -> repita_decl','declaracao',1,'p_declaracao_2','parser.py',74),
  ('declaracao -> atribuicao_decl','declaracao',1,'p_declaracao_3','parser.py',78),
  ('declaracao -> leia_decl','declaracao',1,'p_declaracao_4','parser.py',82),
  ('declaracao -> escreva_decl','declaracao',1,'p_declaracao_5','parser.py',86),
  ('declaracao -> declara_var','declaracao',1,'p_declaracao_6','parser.py',90),
  ('declaracao -> retorna_decl','declaracao',1,'p_declaracao_7','parser.py',95),
  ('declaracao -> chamada_func','declaracao',1,'p_declaracao_8','parser.py',99),
  ('retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA','retorna_decl',5,'p_retorna_decl_1','parser.py',104),
  ('retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA','retorna_decl',5,'p_retorna_decl_2','parser.py',108),
  ('numero_decl -> INTEIRO','numero_decl',1,'p_numero_1','parser.py',112),
  ('numero_decl -> FLUTUANTE','numero_decl',1,'p_numero_2','parser.py',116),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA','se_decl',7,'p_se_decl_1','parser.py',120),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA','se_decl',10,'p_se_decl_2','parser.py',124),
  ('repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA','repita_decl',6,'p_repita_decl','parser.py',128),
  ('atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA','atribuicao_decl',4,'p_atribuicao_decl','parser.py',132),
  ('leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA','leia_decl',5,'p_leia_decl','parser.py',136),
  ('escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_1','parser.py',140),
  ('escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_2','parser.py',144),
  ('chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA','chamada_func',5,'p_chamada_func','parser.py',148),
  ('chamada_func_escreva -> ID ABRE_PAR parametro_chama_func FECHA_PAR','chamada_func_escreva',4,'p_chamada_func_escreva','parser.py',152),
  ('parametro_chama_func -> parametro_chama_func VIRGULA ID','parametro_chama_func',3,'p_parametro_chama_func_1','parser.py',156),
  ('parametro_chama_func -> parametro_chama_func VIRGULA numero_decl','parametro_chama_func',3,'p_parametro_chama_func_2','parser.py',160),
  ('parametro_chama_func -> ID','parametro_chama_func',1,'p_parametro_chama_func_3','parser.py',164),
  ('parametro_chama_func -> numero_decl','parametro_chama_func',1,'p_parametro_chama_func_4','parser.py',168),
  ('exp_decl -> simples_exp','exp_decl',1,'p_exp_decl_1','parser.py',172),
  ('exp_decl -> simples_exp compara_op simples_exp','exp_decl',3,'p_exp_decl_2','parser.py',176),
  ('compara_op -> IGUAL','compara_op',1,'p_compara_op_1','parser.py',180),
  ('compara_op -> MENOR','compara_op',1,'p_compara_op_2','parser.py',184),
  ('compara_op -> MAIOR','compara_op',1,'p_compara_op_3','parser.py',188),
  ('compara_op -> MENOR_IGUAL','compara_op',1,'p_compara_op_4','parser.py',192),
  ('compara_op -> MAIOR_IGUAL','compara_op',1,'p_compara_op_5','parser.py',196),
  ('simples_exp -> termo','simples_exp',1,'p_simples_exp_1','parser.py',200),
  ('simples_exp -> simples_exp soma_sub termo','simples_exp',3,'p_simples_exp_2','parser.py',204),
  ('soma_sub -> SOMA','soma_sub',1,'p_soma_sub_1','parser.py',208),
  ('soma_sub -> SUB','soma_sub',1,'p_soma_sub_2','parser.py',212),
  ('termo -> fator','termo',1,'p_termo_1','parser.py',216),
  ('termo -> termo mult_div fator','termo',3,'p_termo_2','parser.py',220),
  ('mult_div -> MULT','mult_div',1,'p_mult_div_1','parser.py',224),
  ('mult_div -> DIVISAO','mult_div',1,'p_mult_div_2','parser.py',228),
  ('fator -> ID','fator',1,'p_fator_1','parser.py',232),
  ('fator -> numero_decl','fator',1,'p_fator_2','parser.py',236),
  ('fator -> ABRE_PAR exp_decl FECHA_PAR','fator',3,'p_fator_3','parser.py',240),
  ('declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA','declara_var',4,'p_declara_var','parser.py',244),
  ('parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID','parametro_decl',5,'p_parametro_decl_1','parser.py',248),
  ('parametro_decl -> tipo DOIS_PONTOS ID','parametro_decl',3,'p_parametro_decl_2','parser.py',252),
  ('tipo -> VAZIO','tipo',1,'p_tipo_1','parser.py',256),
  ('tipo -> INTEIRO','tipo',1,'p_tipo_2','parser.py',260),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo_3','parser.py',264),
]
