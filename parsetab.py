
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '205AA5480E34B58AA242385B88180FA3'
    
_lr_action_items = {'MENOR_IGUAL':([57,59,61,62,63,64,65,73,104,106,107,],[77,-46,-51,-20,-42,-50,-21,-50,-43,-52,-47,]),'VAZIO':([0,3,5,7,14,17,23,25,28,30,33,35,36,37,40,42,43,44,45,48,50,51,56,70,95,105,110,112,113,115,116,117,118,121,122,126,127,128,130,],[6,6,6,-5,-6,22,-53,22,22,22,-14,-16,-17,-11,22,-10,-13,-8,-15,-12,22,22,-9,22,-7,22,-25,-27,-28,-19,-18,-26,22,-29,-24,-22,22,22,-23,]),'ESCREVA':([23,28,30,33,35,36,37,40,42,43,44,45,48,50,51,56,70,105,110,112,113,115,116,117,118,121,122,126,127,128,130,],[-53,34,34,-14,-16,-17,-11,34,-10,-13,-8,-15,-12,34,34,-9,34,34,-25,-27,-28,-19,-18,-26,34,-29,-24,-22,34,34,-23,]),'VIRGULA':([20,31,62,65,68,91,92,93,114,119,120,],[25,-55,-20,-21,-54,-34,-33,108,108,-32,-31,]),'RETORNA':([23,28,30,33,35,36,37,40,42,43,44,45,48,50,51,56,70,105,110,112,113,115,116,117,118,121,122,126,127,128,130,],[-53,38,38,-14,-16,-17,-11,38,-10,-13,-8,-15,-12,38,38,-9,38,38,-25,-27,-28,-19,-18,-26,38,-29,-24,-22,38,38,-23,]),'FIM':([23,33,35,36,37,40,42,43,44,45,48,50,56,110,112,113,115,116,117,118,121,122,126,128,130,],[-53,-14,-16,-17,-11,55,-10,-13,-8,-15,-12,69,-9,-25,-27,-28,-19,-18,-26,124,-29,-24,-22,129,-23,]),'PRINCIPAL':([6,],[16,]),'MAIOR_IGUAL':([57,59,61,62,63,64,65,73,104,106,107,],[81,-46,-51,-20,-42,-50,-21,-50,-43,-52,-47,]),'MAIOR':([57,59,61,62,63,64,65,73,104,106,107,],[82,-46,-51,-20,-42,-50,-21,-50,-43,-52,-47,]),'DOIS_PONTOS':([1,6,8,9,21,22,29,41,],[11,-56,-58,-57,27,-56,49,11,]),'SUB':([57,59,61,62,63,64,65,73,103,104,106,107,],[83,-46,-51,-20,-42,-50,-21,-50,83,-43,-52,-47,]),'SENAO':([23,33,35,36,37,42,43,44,45,48,56,110,112,113,115,116,117,118,121,122,126,130,],[-53,-14,-16,-17,-11,-10,-13,-8,-15,-12,-9,-25,-27,-28,-19,-18,-26,125,-29,-24,-22,-23,]),'MULT':([59,61,62,63,64,65,73,104,106,107,],[-46,-51,-20,88,-50,-21,-50,88,-52,-47,]),'REPITA':([23,28,30,33,35,36,37,40,42,43,44,45,48,50,51,56,70,105,110,112,113,115,116,117,118,121,122,126,127,128,130,],[-53,32,32,-14,-16,-17,-11,32,-10,-13,-8,-15,-12,32,32,-9,32,32,-25,-27,-28,-19,-18,-26,32,-29,-24,-22,32,32,-23,]),'INTEIRO':([0,3,5,7,14,17,23,25,28,30,33,35,36,37,40,42,43,44,45,46,48,50,51,52,53,56,60,66,67,70,77,78,79,80,81,82,83,84,85,88,89,90,95,96,99,105,108,110,112,113,115,116,117,118,121,122,126,127,128,130,],[9,9,9,-5,-6,9,-53,9,9,9,-14,-16,-17,-11,9,-10,-13,-8,-15,62,-12,9,9,62,62,-9,62,62,62,9,-40,-44,62,62,-41,-39,-45,-37,-38,-48,62,-49,-7,62,62,9,62,-25,-27,-28,-19,-18,-26,9,-29,-24,-22,9,9,-23,]),'SOMA':([57,59,61,62,63,64,65,73,103,104,106,107,],[78,-46,-51,-20,-42,-50,-21,-50,78,-43,-52,-47,]),'DIVISAO':([59,61,62,63,64,65,73,104,106,107,],[-46,-51,-20,90,-50,-21,-50,90,-52,-47,]),'ATE':([23,33,35,36,37,42,43,44,45,48,56,70,110,112,113,115,116,117,121,122,126,130,],[-53,-14,-16,-17,-11,-10,-13,-8,-15,-12,-9,96,-25,-27,-28,-19,-18,-26,-29,-24,-22,-23,]),'LEIA':([23,28,30,33,35,36,37,40,42,43,44,45,48,50,51,56,70,105,110,112,113,115,116,117,118,121,122,126,127,128,130,],[-53,39,39,-14,-16,-17,-11,39,-10,-13,-8,-15,-12,39,39,-9,39,39,-25,-27,-28,-19,-18,-26,39,-29,-24,-22,39,39,-23,]),'NOVA_LINHA':([18,24,26,32,57,59,61,62,63,64,65,69,86,94,97,98,100,101,102,103,104,106,107,109,111,124,125,129,],[23,28,30,51,-35,-46,-51,-20,-42,-50,-21,95,105,110,112,113,115,116,117,-36,-43,-52,-47,121,122,126,127,130,]),'IGUAL':([57,59,61,62,63,64,65,73,104,106,107,],[84,-46,-51,-20,-42,-50,-21,-50,-43,-52,-47,]),'SE':([23,28,30,33,35,36,37,40,42,43,44,45,48,50,51,56,70,105,110,112,113,115,116,117,118,121,122,126,127,128,130,],[-53,46,46,-14,-16,-17,-11,46,-10,-13,-8,-15,-12,46,46,-9,46,46,-25,-27,-28,-19,-18,-26,46,-29,-24,-22,46,46,-23,]),'ABRE_PAR':([10,16,34,38,39,46,47,52,60,67,73,77,78,79,80,81,82,83,84,85,88,89,90,96,],[17,19,52,53,54,60,66,60,60,60,99,-40,-44,60,60,-41,-39,-45,-37,-38,-48,60,-49,60,]),'ATRIBUICAO':([47,],[67,]),'MENOR':([57,59,61,62,63,64,65,73,104,106,107,],[85,-46,-51,-20,-42,-50,-21,-50,-43,-52,-47,]),'ID':([1,6,8,9,11,12,23,27,28,30,33,35,36,37,40,42,43,44,45,46,48,49,50,51,52,53,54,56,60,66,67,70,77,78,79,80,81,82,83,84,85,88,89,90,96,99,105,108,110,112,113,115,116,117,118,121,122,126,127,128,130,],[10,-56,-58,-57,18,10,-53,31,47,47,-14,-16,-17,-11,47,-10,-13,-8,-15,64,-12,68,47,47,73,75,76,-9,64,92,64,47,-40,-44,64,64,-41,-39,-45,-37,-38,-48,64,-49,64,92,47,120,-25,-27,-28,-19,-18,-26,47,-29,-24,-22,47,47,-23,]),'$end':([2,4,13,15,55,],[0,-1,-2,-3,-4,]),'FECHA_PAR':([19,20,31,57,59,61,62,63,64,65,68,71,72,73,74,75,76,87,91,92,93,103,104,106,107,114,119,120,123,],[24,26,-55,-35,-46,-51,-20,-42,-50,-21,-54,97,98,-50,100,101,102,106,-34,-33,109,-36,-43,-52,-47,123,-32,-31,-30,]),'FLUTUANTE':([0,3,5,7,14,17,23,25,28,30,33,35,36,37,40,42,43,44,45,46,48,50,51,52,53,56,60,66,67,70,77,78,79,80,81,82,83,84,85,88,89,90,95,96,99,105,108,110,112,113,115,116,117,118,121,122,126,127,128,130,],[8,8,8,-5,-6,8,-53,8,8,8,-14,-16,-17,-11,8,-10,-13,-8,-15,65,-12,8,8,65,65,-9,65,65,65,8,-40,-44,65,65,-41,-39,-45,-37,-38,-48,65,-49,-7,65,65,8,65,-25,-27,-28,-19,-18,-26,8,-29,-24,-22,8,8,-23,]),'ENTAO':([57,58,59,61,62,63,64,65,103,104,106,107,],[-35,86,-46,-51,-20,-42,-50,-21,-36,-43,-52,-47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametro_decl':([17,],[20,]),'programa':([0,5,],[2,15,]),'escreva_decl':([28,30,40,50,51,70,105,118,127,128,],[33,33,33,33,33,33,33,33,33,33,]),'soma_sub':([57,103,],[80,80,]),'func_loop':([0,5,],[3,3,]),'simples_exp':([46,52,60,67,79,96,],[57,57,57,57,103,57,]),'retorna_decl':([28,30,40,50,51,70,105,118,127,128,],[35,35,35,35,35,35,35,35,35,35,]),'chamada_func':([28,30,40,50,51,70,105,118,127,128,],[36,36,36,36,36,36,36,36,36,36,]),'mult_div':([63,104,],[89,89,]),'repita_decl':([28,30,40,50,51,70,105,118,127,128,],[37,37,37,37,37,37,37,37,37,37,]),'declara_var':([0,5,28,30,40,50,51,70,105,118,127,128,],[5,5,45,45,45,45,45,45,45,45,45,45,]),'sequencia_decl':([28,30,51,105,127,],[40,50,70,118,128,]),'numero_decl':([46,52,53,60,66,67,79,80,89,96,99,108,],[61,61,74,61,91,61,61,61,61,61,91,119,]),'tipo':([0,3,5,17,25,28,30,40,50,51,70,105,118,127,128,],[1,12,1,21,29,41,41,41,41,41,41,41,41,41,41,]),'se_decl':([28,30,40,50,51,70,105,118,127,128,],[42,42,42,42,42,42,42,42,42,42,]),'exp_decl':([46,52,60,67,96,],[58,71,87,94,111,]),'leia_decl':([28,30,40,50,51,70,105,118,127,128,],[43,43,43,43,43,43,43,43,43,43,]),'principal':([0,3,5,],[4,13,4,]),'declaracao':([28,30,40,50,51,70,105,118,127,128,],[44,44,56,56,44,56,44,56,44,56,]),'func_decl':([0,3,5,],[7,14,7,]),'chamada_func_escreva':([52,],[72,]),'compara_op':([57,],[79,]),'termo':([46,52,60,67,79,80,96,],[63,63,63,63,63,104,63,]),'fator':([46,52,60,67,79,80,89,96,],[59,59,59,59,59,59,107,59,]),'parametro_chama_func':([66,99,],[93,114,]),'atribuicao_decl':([28,30,40,50,51,70,105,118,127,128,],[48,48,48,48,48,48,48,48,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> principal','programa',1,'p_programa_1','parser.py',26),
  ('programa -> func_loop principal','programa',2,'p_programa_2','parser.py',31),
  ('programa -> declara_var programa','programa',2,'p_programa_3','parser.py',36),
  ('principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM','principal',7,'p_principal','parser.py',41),
  ('func_loop -> func_decl','func_loop',1,'p_func_loop_1','parser.py',46),
  ('func_loop -> func_loop func_decl','func_loop',2,'p_func_loop_2','parser.py',51),
  ('func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA','func_decl',9,'p_func_decl','parser.py',56),
  ('sequencia_decl -> declaracao','sequencia_decl',1,'p_sequencia_decl_1','parser.py',61),
  ('sequencia_decl -> sequencia_decl declaracao','sequencia_decl',2,'p_sequencia_decl_2','parser.py',66),
  ('declaracao -> se_decl','declaracao',1,'p_declaracao_1','parser.py',70),
  ('declaracao -> repita_decl','declaracao',1,'p_declaracao_2','parser.py',74),
  ('declaracao -> atribuicao_decl','declaracao',1,'p_declaracao_3','parser.py',78),
  ('declaracao -> leia_decl','declaracao',1,'p_declaracao_4','parser.py',82),
  ('declaracao -> escreva_decl','declaracao',1,'p_declaracao_5','parser.py',86),
  ('declaracao -> declara_var','declaracao',1,'p_declaracao_6','parser.py',90),
  ('declaracao -> retorna_decl','declaracao',1,'p_declaracao_7','parser.py',95),
  ('declaracao -> chamada_func','declaracao',1,'p_declaracao_8','parser.py',99),
  ('retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA','retorna_decl',5,'p_retorna_decl_1','parser.py',104),
  ('retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA','retorna_decl',5,'p_retorna_decl_2','parser.py',108),
  ('numero_decl -> INTEIRO','numero_decl',1,'p_numero_1','parser.py',112),
  ('numero_decl -> FLUTUANTE','numero_decl',1,'p_numero_2','parser.py',116),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA','se_decl',7,'p_se_decl_1','parser.py',120),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA','se_decl',10,'p_se_decl_2','parser.py',124),
  ('repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA','repita_decl',6,'p_repita_decl','parser.py',128),
  ('atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA','atribuicao_decl',4,'p_atribuicao_decl','parser.py',132),
  ('leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA','leia_decl',5,'p_leia_decl','parser.py',136),
  ('escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_1','parser.py',140),
  ('escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_2','parser.py',144),
  ('chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA','chamada_func',5,'p_chamada_func','parser.py',148),
  ('chamada_func_escreva -> ID ABRE_PAR parametro_chama_func FECHA_PAR','chamada_func_escreva',4,'p_chamada_func_escreva','parser.py',152),
  ('parametro_chama_func -> parametro_chama_func VIRGULA ID','parametro_chama_func',3,'p_parametro_chama_func_1','parser.py',156),
  ('parametro_chama_func -> parametro_chama_func VIRGULA numero_decl','parametro_chama_func',3,'p_parametro_chama_func_2','parser.py',160),
  ('parametro_chama_func -> ID','parametro_chama_func',1,'p_parametro_chama_func_3','parser.py',164),
  ('parametro_chama_func -> numero_decl','parametro_chama_func',1,'p_parametro_chama_func_4','parser.py',168),
  ('exp_decl -> simples_exp','exp_decl',1,'p_exp_decl_1','parser.py',172),
  ('exp_decl -> simples_exp compara_op simples_exp','exp_decl',3,'p_exp_decl_2','parser.py',176),
  ('compara_op -> IGUAL','compara_op',1,'p_compara_op_1','parser.py',180),
  ('compara_op -> MENOR','compara_op',1,'p_compara_op_2','parser.py',184),
  ('compara_op -> MAIOR','compara_op',1,'p_compara_op_3','parser.py',188),
  ('compara_op -> MENOR_IGUAL','compara_op',1,'p_compara_op_4','parser.py',192),
  ('compara_op -> MAIOR_IGUAL','compara_op',1,'p_compara_op_5','parser.py',196),
  ('simples_exp -> termo','simples_exp',1,'p_simples_exp_1','parser.py',200),
  ('simples_exp -> simples_exp soma_sub termo','simples_exp',3,'p_simples_exp_2','parser.py',204),
  ('soma_sub -> SOMA','soma_sub',1,'p_soma_sub_1','parser.py',208),
  ('soma_sub -> SUB','soma_sub',1,'p_soma_sub_2','parser.py',212),
  ('termo -> fator','termo',1,'p_termo_1','parser.py',216),
  ('termo -> termo mult_div fator','termo',3,'p_termo_2','parser.py',220),
  ('mult_div -> MULT','mult_div',1,'p_mult_div_1','parser.py',224),
  ('mult_div -> DIVISAO','mult_div',1,'p_mult_div_2','parser.py',228),
  ('fator -> ID','fator',1,'p_fator_1','parser.py',232),
  ('fator -> numero_decl','fator',1,'p_fator_2','parser.py',236),
  ('fator -> ABRE_PAR exp_decl FECHA_PAR','fator',3,'p_fator_3','parser.py',240),
  ('declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA','declara_var',4,'p_declara_var','parser.py',244),
  ('parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID','parametro_decl',5,'p_parametro_decl_1','parser.py',248),
  ('parametro_decl -> tipo DOIS_PONTOS ID','parametro_decl',3,'p_parametro_decl_2','parser.py',252),
  ('tipo -> VAZIO','tipo',1,'p_tipo_1','parser.py',256),
  ('tipo -> INTEIRO','tipo',1,'p_tipo_2','parser.py',260),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo_3','parser.py',264),
]
