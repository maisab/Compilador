
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A87B569FA8EA95393BCE8231CEFF6B3A'
    
_lr_action_items = {'NOVA_LINHA':([17,20,21,26,29,30,32,34,35,38,40,41,42,50,54,55,57,58,59,60,65,87,88,90,91,93,94,96,97,98,99,100,101,104,107,108,109,110,113,115,116,118,119,121,122,],[20,-50,24,45,-14,-16,-12,-10,-15,52,-11,-8,-13,-9,-42,-38,-46,-48,-31,-47,91,102,103,104,-24,107,108,-18,-17,-43,-49,-39,-32,-25,-27,-26,113,114,-23,117,118,-21,120,122,-22,]),'LEIA':([20,24,29,30,32,34,35,37,40,41,42,45,50,52,62,69,91,96,97,102,104,107,108,110,113,117,118,119,122,],[-50,28,-14,-16,-12,-10,-15,28,-11,-8,-13,28,-9,28,28,28,-24,-18,-17,28,-25,-27,-26,28,-23,28,-21,28,-22,]),'$end':([7,8,12,13,51,],[0,-1,-2,-3,-4,]),'MAIOR':([54,55,57,58,59,60,66,98,99,100,],[-42,-38,-46,-48,82,-47,-46,-43,-49,-39,]),'VIRGULA':([23,44,89,],[27,-52,-51,]),'ID':([2,4,5,9,10,14,20,24,25,29,30,32,34,35,37,40,41,42,43,45,47,48,49,50,52,53,56,62,63,69,74,75,76,78,79,80,81,82,83,84,85,86,91,92,95,96,97,102,104,105,106,107,108,110,112,113,117,118,119,122,],[-53,-55,16,-54,16,17,-50,33,44,-14,-16,-12,-10,-15,33,-11,-8,-13,57,33,64,57,66,-9,33,73,57,33,89,33,57,-45,-44,-40,-34,57,-36,-35,-37,-33,57,-41,-24,106,57,-18,-17,33,-25,112,-29,-27,-26,33,-30,-23,33,-21,33,-22,]),'SENAO':([114,],[115,]),'SOMA':([54,55,57,58,59,60,66,98,99,100,101,],[-42,-38,-46,-48,78,-47,-46,-43,-49,-39,78,]),'ABRE_PAR':([15,16,28,36,39,43,48,49,56,66,74,75,76,78,79,80,81,82,83,84,85,86,95,],[18,19,47,49,53,56,56,56,56,92,56,-45,-44,-40,-34,56,-36,-35,-37,-33,56,-41,56,]),'SE':([20,24,29,30,32,34,35,37,40,41,42,45,50,52,62,69,91,96,97,102,104,107,108,110,113,117,118,119,122,],[-50,43,-14,-16,-12,-10,-15,43,-11,-8,-13,43,-9,43,43,43,-24,-18,-17,43,-25,-27,-26,43,-23,43,-21,43,-22,]),'DIVISAO':([54,55,57,58,60,66,98,99,100,],[-42,75,-46,-48,-47,-46,-43,-49,75,]),'ESCREVA':([20,24,29,30,32,34,35,37,40,41,42,45,50,52,62,69,91,96,97,102,104,107,108,110,113,117,118,119,122,],[-50,36,-14,-16,-12,-10,-15,36,-11,-8,-13,36,-9,36,36,36,-24,-18,-17,36,-25,-27,-26,36,-23,36,-21,36,-22,]),'ATE':([20,29,30,32,34,35,40,41,42,50,69,91,96,97,104,107,108,113,118,122,],[-50,-14,-16,-12,-10,-15,-11,-8,-13,-9,95,-24,-18,-17,-25,-27,-26,-23,-21,-22,]),'INTEIRO':([0,1,3,6,11,19,20,24,27,29,30,32,34,35,37,40,41,42,43,45,48,49,50,52,53,56,62,69,74,75,76,78,79,80,81,82,83,84,85,86,91,95,96,97,102,103,104,107,108,110,113,117,118,119,122,],[9,9,9,-5,-6,9,-50,9,9,-14,-16,-12,-10,-15,9,-11,-8,-13,60,9,60,60,-9,9,71,60,9,9,60,-45,-44,-40,-34,60,-36,-35,-37,-33,60,-41,-24,60,-18,-17,9,-7,-25,-27,-26,9,-23,9,-21,9,-22,]),'SUB':([54,55,57,58,59,60,66,98,99,100,101,],[-42,-38,-46,-48,86,-47,-46,-43,-49,-39,86,]),'VAZIO':([0,1,3,6,11,19,20,24,27,29,30,32,34,35,37,40,41,42,45,50,52,62,69,91,96,97,102,103,104,107,108,110,113,117,118,119,122,],[2,2,2,-5,-6,2,-50,2,2,-14,-16,-12,-10,-15,2,-11,-8,-13,2,-9,2,2,2,-24,-18,-17,2,-7,-25,-27,-26,2,-23,2,-21,2,-22,]),'MULT':([54,55,57,58,60,66,98,99,100,],[-42,76,-46,-48,-47,-46,-43,-49,76,]),'MENOR':([54,55,57,58,59,60,66,98,99,100,],[-42,-38,-46,-48,79,-47,-46,-43,-49,-39,]),'ATRIBUICAO':([33,],[48,]),'MAIOR_IGUAL':([54,55,57,58,59,60,66,98,99,100,],[-42,-38,-46,-48,83,-47,-46,-43,-49,-39,]),'PRINCIPAL':([2,4,5,9,10,],[-53,-55,15,-54,15,]),'RETORNA':([20,24,29,30,32,34,35,37,40,41,42,45,50,52,62,69,91,96,97,102,104,107,108,110,113,117,118,119,122,],[-50,39,-14,-16,-12,-10,-15,39,-11,-8,-13,39,-9,39,39,39,-24,-18,-17,39,-25,-27,-26,39,-23,39,-21,39,-22,]),'ENTAO':([54,55,57,58,59,60,61,98,99,100,101,],[-42,-38,-46,-48,-31,-47,87,-43,-49,-39,-32,]),'FLUTUANTE':([0,1,3,6,11,19,20,24,27,29,30,32,34,35,37,40,41,42,43,45,48,49,50,52,53,56,62,69,74,75,76,78,79,80,81,82,83,84,85,86,91,95,96,97,102,103,104,107,108,110,113,117,118,119,122,],[4,4,4,-5,-6,4,-50,4,4,-14,-16,-12,-10,-15,4,-11,-8,-13,58,4,58,58,-9,4,70,58,4,4,58,-45,-44,-40,-34,58,-36,-35,-37,-33,58,-41,-24,58,-18,-17,4,-7,-25,-27,-26,4,-23,4,-21,4,-22,]),'FIM':([20,29,30,32,34,35,37,40,41,42,50,62,91,96,97,104,107,108,113,114,118,120,122,],[-50,-14,-16,-12,-10,-15,51,-11,-8,-13,-9,88,-24,-18,-17,-25,-27,-26,-23,116,-21,121,-22,]),'MENOR_IGUAL':([54,55,57,58,59,60,66,98,99,100,],[-42,-38,-46,-48,81,-47,-46,-43,-49,-39,]),'FECHA_PAR':([18,23,44,54,55,57,58,59,60,64,66,67,68,70,71,72,73,77,89,98,99,100,101,105,106,111,112,],[21,26,-52,-42,-38,-46,-48,-31,-47,90,-46,93,94,-20,-19,96,97,99,-51,-43,-49,-39,-32,111,-29,-28,-30,]),'DOIS_PONTOS':([2,4,5,9,22,31,46,],[-53,-55,14,-54,25,14,63,]),'REPITA':([20,24,29,30,32,34,35,37,40,41,42,45,50,52,62,69,91,96,97,102,104,107,108,110,113,117,118,119,122,],[-50,38,-14,-16,-12,-10,-15,38,-11,-8,-13,38,-9,38,38,38,-24,-18,-17,38,-25,-27,-26,38,-23,38,-21,38,-22,]),'IGUAL':([54,55,57,58,59,60,66,98,99,100,],[-42,-38,-46,-48,84,-47,-46,-43,-49,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_loop':([0,3,],[1,1,]),'mult_div':([55,100,],[74,74,]),'declara_var':([0,3,24,37,45,52,62,69,102,110,117,119,],[3,3,35,35,35,35,35,35,35,35,35,35,]),'tipo':([0,1,3,19,24,27,37,45,52,62,69,102,110,117,119,],[5,10,5,22,31,46,31,31,31,31,31,31,31,31,31,]),'leia_decl':([24,37,45,52,62,69,102,110,117,119,],[42,42,42,42,42,42,42,42,42,42,]),'escreva_decl':([24,37,45,52,62,69,102,110,117,119,],[29,29,29,29,29,29,29,29,29,29,]),'atribuicao_decl':([24,37,45,52,62,69,102,110,117,119,],[32,32,32,32,32,32,32,32,32,32,]),'simples_exp':([43,48,49,56,85,95,],[59,59,59,59,101,59,]),'se_decl':([24,37,45,52,62,69,102,110,117,119,],[34,34,34,34,34,34,34,34,34,34,]),'retorna_decl':([24,37,45,52,62,69,102,110,117,119,],[30,30,30,30,30,30,30,30,30,30,]),'declaracao':([24,37,45,52,62,69,102,110,117,119,],[41,50,41,41,50,50,41,50,41,50,]),'parametro_decl':([19,],[23,]),'chamada_func':([49,],[67,]),'fator':([43,48,49,56,74,80,85,95,],[54,54,54,54,98,54,54,54,]),'principal':([0,1,3,],[8,12,8,]),'func_decl':([0,1,3,],[6,11,6,]),'compara_op':([59,],[85,]),'repita_decl':([24,37,45,52,62,69,102,110,117,119,],[40,40,40,40,40,40,40,40,40,40,]),'termo':([43,48,49,56,80,85,95,],[55,55,55,55,100,55,55,]),'sequencia_decl':([24,45,52,102,117,],[37,62,69,110,119,]),'soma_sub':([59,101,],[80,80,]),'parametro_chama_func':([92,],[105,]),'programa':([0,3,],[7,13,]),'exp_decl':([43,48,49,56,95,],[61,65,68,77,109,]),'numero_decl':([53,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> principal','programa',1,'p_programa_1','parser.py',16),
  ('programa -> func_loop principal','programa',2,'p_programa_2','parser.py',21),
  ('programa -> declara_var programa','programa',2,'p_programa_3','parser.py',26),
  ('principal -> tipo PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM','principal',7,'p_principal','parser.py',31),
  ('func_loop -> func_decl','func_loop',1,'p_func_loop_1','parser.py',36),
  ('func_loop -> func_loop func_decl','func_loop',2,'p_func_loop_2','parser.py',41),
  ('func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA','func_decl',9,'p_func_decl','parser.py',46),
  ('sequencia_decl -> declaracao','sequencia_decl',1,'p_sequencia_decl_1','parser.py',51),
  ('sequencia_decl -> sequencia_decl declaracao','sequencia_decl',2,'p_sequencia_decl_2','parser.py',56),
  ('declaracao -> se_decl','declaracao',1,'p_declaracao_1','parser.py',60),
  ('declaracao -> repita_decl','declaracao',1,'p_declaracao_2','parser.py',64),
  ('declaracao -> atribuicao_decl','declaracao',1,'p_declaracao_3','parser.py',68),
  ('declaracao -> leia_decl','declaracao',1,'p_declaracao_4','parser.py',72),
  ('declaracao -> escreva_decl','declaracao',1,'p_declaracao_5','parser.py',76),
  ('declaracao -> declara_var','declaracao',1,'p_declaracao_6','parser.py',80),
  ('declaracao -> retorna_decl','declaracao',1,'p_declaracao_7','parser.py',85),
  ('retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR','retorna_decl',4,'p_retorna_decl_1','parser.py',89),
  ('retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR','retorna_decl',4,'p_retorna_decl_2','parser.py',93),
  ('numero_decl -> INTEIRO','numero_decl',1,'p_numero_1','parser.py',97),
  ('numero_decl -> FLUTUANTE','numero_decl',1,'p_numero_2','parser.py',101),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl NOVA_LINHA FIM NOVA_LINHA','se_decl',8,'p_se_decl_1','parser.py',105),
  ('se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl NOVA_LINHA SENAO NOVA_LINHA sequencia_decl NOVA_LINHA FIM NOVA_LINHA','se_decl',12,'p_se_decl_2','parser.py',109),
  ('repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA','repita_decl',6,'p_repita_decl','parser.py',113),
  ('atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA','atribuicao_decl',4,'p_atribuicao_decl','parser.py',117),
  ('leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA','leia_decl',5,'p_leia_decl','parser.py',121),
  ('escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_1','parser.py',125),
  ('escreva_decl -> ESCREVA ABRE_PAR chamada_func FECHA_PAR NOVA_LINHA','escreva_decl',5,'p_escreva_decl_2','parser.py',129),
  ('chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR','chamada_func',4,'p_chamada_func','parser.py',133),
  ('parametro_chama_func -> ID','parametro_chama_func',1,'p_parametro_chama_func_1','parser.py',137),
  ('parametro_chama_func -> parametro_chama_func ID','parametro_chama_func',2,'p_parametro_chama_func_2','parser.py',141),
  ('exp_decl -> simples_exp','exp_decl',1,'p_exp_decl_1','parser.py',145),
  ('exp_decl -> simples_exp compara_op simples_exp','exp_decl',3,'p_exp_decl_2','parser.py',149),
  ('compara_op -> IGUAL','compara_op',1,'p_compara_op_1','parser.py',153),
  ('compara_op -> MENOR','compara_op',1,'p_compara_op_2','parser.py',157),
  ('compara_op -> MAIOR','compara_op',1,'p_compara_op_3','parser.py',161),
  ('compara_op -> MENOR_IGUAL','compara_op',1,'p_compara_op_4','parser.py',165),
  ('compara_op -> MAIOR_IGUAL','compara_op',1,'p_compara_op_5','parser.py',169),
  ('simples_exp -> termo','simples_exp',1,'p_simples_exp_1','parser.py',173),
  ('simples_exp -> simples_exp soma_sub termo','simples_exp',3,'p_simples_exp_2','parser.py',177),
  ('soma_sub -> SOMA','soma_sub',1,'p_soma_sub_1','parser.py',181),
  ('soma_sub -> SUB','soma_sub',1,'p_soma_sub_2','parser.py',185),
  ('termo -> fator','termo',1,'p_termo_1','parser.py',189),
  ('termo -> termo mult_div fator','termo',3,'p_termo_2','parser.py',193),
  ('mult_div -> MULT','mult_div',1,'p_mult_div_1','parser.py',197),
  ('mult_div -> DIVISAO','mult_div',1,'p_mult_div_2','parser.py',201),
  ('fator -> ID','fator',1,'p_fator_1','parser.py',205),
  ('fator -> INTEIRO','fator',1,'p_fator_2','parser.py',209),
  ('fator -> FLUTUANTE','fator',1,'p_fator_3','parser.py',213),
  ('fator -> ABRE_PAR exp_decl FECHA_PAR','fator',3,'p_fator_4','parser.py',217),
  ('declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA','declara_var',4,'p_declara_var','parser.py',222),
  ('parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID','parametro_decl',5,'p_parametro_decl_1','parser.py',226),
  ('parametro_decl -> tipo DOIS_PONTOS ID','parametro_decl',3,'p_parametro_decl_2','parser.py',230),
  ('tipo -> VAZIO','tipo',1,'p_tipo_1','parser.py',234),
  ('tipo -> INTEIRO','tipo',1,'p_tipo_2','parser.py',238),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo_3','parser.py',242),
]
