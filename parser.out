Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> principal
Rule 2     programa -> func_loop principal
Rule 3     programa -> declara_var programa
Rule 4     principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM
Rule 5     func_loop -> func_decl
Rule 6     func_loop -> func_loop func_decl
Rule 7     func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA
Rule 8     sequencia_decl -> declaracao
Rule 9     sequencia_decl -> sequencia_decl declaracao
Rule 10    declaracao -> se_decl
Rule 11    declaracao -> repita_decl
Rule 12    declaracao -> atribuicao_decl
Rule 13    declaracao -> leia_decl
Rule 14    declaracao -> escreva_decl
Rule 15    declaracao -> declara_var
Rule 16    declaracao -> retorna_decl
Rule 17    declaracao -> chamada_func
Rule 18    retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
Rule 19    retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
Rule 20    numero_decl -> INTEIRO
Rule 21    numero_decl -> FLUTUANTE
Rule 22    se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
Rule 23    se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
Rule 24    repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
Rule 25    atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA
Rule 26    leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
Rule 27    escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
Rule 28    escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
Rule 29    chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
Rule 30    chamada_func_escreva -> ID ABRE_PAR parametro_chama_func FECHA_PAR
Rule 31    parametro_chama_func -> parametro_chama_func VIRGULA ID
Rule 32    parametro_chama_func -> parametro_chama_func VIRGULA numero_decl
Rule 33    parametro_chama_func -> ID
Rule 34    parametro_chama_func -> numero_decl
Rule 35    exp_decl -> simples_exp
Rule 36    exp_decl -> simples_exp compara_op simples_exp
Rule 37    compara_op -> IGUAL
Rule 38    compara_op -> MENOR
Rule 39    compara_op -> MAIOR
Rule 40    compara_op -> MENOR_IGUAL
Rule 41    compara_op -> MAIOR_IGUAL
Rule 42    simples_exp -> termo
Rule 43    simples_exp -> simples_exp soma_sub termo
Rule 44    soma_sub -> SOMA
Rule 45    soma_sub -> SUB
Rule 46    termo -> fator
Rule 47    termo -> termo mult_div fator
Rule 48    mult_div -> MULT
Rule 49    mult_div -> DIVISAO
Rule 50    fator -> ID
Rule 51    fator -> numero_decl
Rule 52    fator -> ABRE_PAR exp_decl FECHA_PAR
Rule 53    declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA
Rule 54    parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID
Rule 55    parametro_decl -> tipo DOIS_PONTOS ID
Rule 56    tipo -> VAZIO
Rule 57    tipo -> INTEIRO
Rule 58    tipo -> FLUTUANTE

Terminals, with rules where they appear

ABRE_PAR             : 4 7 18 19 26 27 28 29 30 52
ATE                  : 24
ATRIBUICAO           : 25
DIVISAO              : 49
DOIS_PONTOS          : 53 54 55
ENTAO                : 22 23
ESCREVA              : 27 28
FECHA_PAR            : 4 7 18 19 26 27 28 29 30 52
FIM                  : 4 7 22 23
FLUTUANTE            : 21 58
ID                   : 7 18 25 26 29 30 31 33 50 53 54 55
IGUAL                : 37
INTEIRO              : 20 57
LEIA                 : 26
MAIOR                : 39
MAIOR_IGUAL          : 41
MENOR                : 38
MENOR_IGUAL          : 40
MULT                 : 48
NOVA_LINHA           : 4 7 7 18 19 22 22 23 23 23 24 24 25 26 27 28 29 53
PRINCIPAL            : 4
REPITA               : 24
RETORNA              : 18 19
SE                   : 22 23
SENAO                : 23
SOMA                 : 44
SUB                  : 45
VAZIO                : 4 56
VIRGULA              : 31 32 54
error                : 

Nonterminals, with rules where they appear

atribuicao_decl      : 12
chamada_func         : 17
chamada_func_escreva : 28
compara_op           : 36
declara_var          : 3 15
declaracao           : 8 9
escreva_decl         : 14
exp_decl             : 22 23 24 25 27 52
fator                : 46 47
func_decl            : 5 6
func_loop            : 2 6
leia_decl            : 13
mult_div             : 47
numero_decl          : 19 32 34 51
parametro_chama_func : 29 30 31 32
parametro_decl       : 7 54
principal            : 1 2
programa             : 3 0
repita_decl          : 11
retorna_decl         : 16
se_decl              : 10
sequencia_decl       : 4 7 9 22 23 23 24
simples_exp          : 35 36 36 43
soma_sub             : 43
termo                : 42 43 47
tipo                 : 7 53 54 55

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . principal
    (2) programa -> . func_loop principal
    (3) programa -> . declara_var programa
    (4) principal -> . VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM
    (5) func_loop -> . func_decl
    (6) func_loop -> . func_loop func_decl
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (7) func_decl -> . tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    VAZIO           shift and go to state 1
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    programa                       shift and go to state 2
    func_loop                      shift and go to state 3
    func_decl                      shift and go to state 4
    tipo                           shift and go to state 5
    declara_var                    shift and go to state 7
    principal                      shift and go to state 6

state 1

    (4) principal -> VAZIO . PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM
    (56) tipo -> VAZIO .

    PRINCIPAL       shift and go to state 10
    DOIS_PONTOS     reduce using rule 56 (tipo -> VAZIO .)
    ID              reduce using rule 56 (tipo -> VAZIO .)


state 2

    (0) S' -> programa .



state 3

    (2) programa -> func_loop . principal
    (6) func_loop -> func_loop . func_decl
    (4) principal -> . VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM
    (7) func_decl -> . tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    VAZIO           shift and go to state 1
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    func_decl                      shift and go to state 11
    tipo                           shift and go to state 12
    principal                      shift and go to state 13

state 4

    (5) func_loop -> func_decl .

    VAZIO           reduce using rule 5 (func_loop -> func_decl .)
    INTEIRO         reduce using rule 5 (func_loop -> func_decl .)
    FLUTUANTE       reduce using rule 5 (func_loop -> func_decl .)


state 5

    (53) declara_var -> tipo . DOIS_PONTOS ID NOVA_LINHA
    (7) func_decl -> tipo . ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    DOIS_PONTOS     shift and go to state 14
    ID              shift and go to state 15


state 6

    (1) programa -> principal .

    $end            reduce using rule 1 (programa -> principal .)


state 7

    (3) programa -> declara_var . programa
    (1) programa -> . principal
    (2) programa -> . func_loop principal
    (3) programa -> . declara_var programa
    (4) principal -> . VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM
    (5) func_loop -> . func_decl
    (6) func_loop -> . func_loop func_decl
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (7) func_decl -> . tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    VAZIO           shift and go to state 1
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    declara_var                    shift and go to state 7
    func_loop                      shift and go to state 3
    func_decl                      shift and go to state 4
    tipo                           shift and go to state 5
    principal                      shift and go to state 6
    programa                       shift and go to state 16

state 8

    (57) tipo -> INTEIRO .

    DOIS_PONTOS     reduce using rule 57 (tipo -> INTEIRO .)
    ID              reduce using rule 57 (tipo -> INTEIRO .)


state 9

    (58) tipo -> FLUTUANTE .

    DOIS_PONTOS     reduce using rule 58 (tipo -> FLUTUANTE .)
    ID              reduce using rule 58 (tipo -> FLUTUANTE .)


state 10

    (4) principal -> VAZIO PRINCIPAL . ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM

    ABRE_PAR        shift and go to state 17


state 11

    (6) func_loop -> func_loop func_decl .

    VAZIO           reduce using rule 6 (func_loop -> func_loop func_decl .)
    INTEIRO         reduce using rule 6 (func_loop -> func_loop func_decl .)
    FLUTUANTE       reduce using rule 6 (func_loop -> func_loop func_decl .)


state 12

    (7) func_decl -> tipo . ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    ID              shift and go to state 15


state 13

    (2) programa -> func_loop principal .

    $end            reduce using rule 2 (programa -> func_loop principal .)


state 14

    (53) declara_var -> tipo DOIS_PONTOS . ID NOVA_LINHA

    ID              shift and go to state 18


state 15

    (7) func_decl -> tipo ID . ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    ABRE_PAR        shift and go to state 19


state 16

    (3) programa -> declara_var programa .

    $end            reduce using rule 3 (programa -> declara_var programa .)


state 17

    (4) principal -> VAZIO PRINCIPAL ABRE_PAR . FECHA_PAR NOVA_LINHA sequencia_decl FIM

    FECHA_PAR       shift and go to state 20


state 18

    (53) declara_var -> tipo DOIS_PONTOS ID . NOVA_LINHA

    NOVA_LINHA      shift and go to state 21


state 19

    (7) func_decl -> tipo ID ABRE_PAR . parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (54) parametro_decl -> . parametro_decl VIRGULA tipo DOIS_PONTOS ID
    (55) parametro_decl -> . tipo DOIS_PONTOS ID
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    parametro_decl                 shift and go to state 24
    tipo                           shift and go to state 23

state 20

    (4) principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR . NOVA_LINHA sequencia_decl FIM

    NOVA_LINHA      shift and go to state 25


state 21

    (53) declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .

    FIM             reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    SE              reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    REPITA          reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    ID              reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    LEIA            reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    ESCREVA         reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    RETORNA         reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    VAZIO           reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    INTEIRO         reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    FLUTUANTE       reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    ATE             reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)
    SENAO           reduce using rule 53 (declara_var -> tipo DOIS_PONTOS ID NOVA_LINHA .)


state 22

    (56) tipo -> VAZIO .

    DOIS_PONTOS     reduce using rule 56 (tipo -> VAZIO .)


state 23

    (55) parametro_decl -> tipo . DOIS_PONTOS ID

    DOIS_PONTOS     shift and go to state 26


state 24

    (7) func_decl -> tipo ID ABRE_PAR parametro_decl . FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (54) parametro_decl -> parametro_decl . VIRGULA tipo DOIS_PONTOS ID

    FECHA_PAR       shift and go to state 28
    VIRGULA         shift and go to state 27


state 25

    (4) principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA . sequencia_decl FIM
    (8) sequencia_decl -> . declaracao
    (9) sequencia_decl -> . sequencia_decl declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 41
    repita_decl                    shift and go to state 30
    sequencia_decl                 shift and go to state 42
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    atribuicao_decl                shift and go to state 45
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36

state 26

    (55) parametro_decl -> tipo DOIS_PONTOS . ID

    ID              shift and go to state 46


state 27

    (54) parametro_decl -> parametro_decl VIRGULA . tipo DOIS_PONTOS ID
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    tipo                           shift and go to state 47

state 28

    (7) func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR . NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    NOVA_LINHA      shift and go to state 48


state 29

    (25) atribuicao_decl -> ID . ATRIBUICAO exp_decl NOVA_LINHA
    (29) chamada_func -> ID . ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA

    ATRIBUICAO      shift and go to state 49
    ABRE_PAR        shift and go to state 50


state 30

    (11) declaracao -> repita_decl .

    FIM             reduce using rule 11 (declaracao -> repita_decl .)
    SE              reduce using rule 11 (declaracao -> repita_decl .)
    REPITA          reduce using rule 11 (declaracao -> repita_decl .)
    ID              reduce using rule 11 (declaracao -> repita_decl .)
    LEIA            reduce using rule 11 (declaracao -> repita_decl .)
    ESCREVA         reduce using rule 11 (declaracao -> repita_decl .)
    RETORNA         reduce using rule 11 (declaracao -> repita_decl .)
    VAZIO           reduce using rule 11 (declaracao -> repita_decl .)
    INTEIRO         reduce using rule 11 (declaracao -> repita_decl .)
    FLUTUANTE       reduce using rule 11 (declaracao -> repita_decl .)
    ATE             reduce using rule 11 (declaracao -> repita_decl .)
    SENAO           reduce using rule 11 (declaracao -> repita_decl .)


state 31

    (10) declaracao -> se_decl .

    FIM             reduce using rule 10 (declaracao -> se_decl .)
    SE              reduce using rule 10 (declaracao -> se_decl .)
    REPITA          reduce using rule 10 (declaracao -> se_decl .)
    ID              reduce using rule 10 (declaracao -> se_decl .)
    LEIA            reduce using rule 10 (declaracao -> se_decl .)
    ESCREVA         reduce using rule 10 (declaracao -> se_decl .)
    RETORNA         reduce using rule 10 (declaracao -> se_decl .)
    VAZIO           reduce using rule 10 (declaracao -> se_decl .)
    INTEIRO         reduce using rule 10 (declaracao -> se_decl .)
    FLUTUANTE       reduce using rule 10 (declaracao -> se_decl .)
    ATE             reduce using rule 10 (declaracao -> se_decl .)
    SENAO           reduce using rule 10 (declaracao -> se_decl .)


state 32

    (26) leia_decl -> LEIA . ABRE_PAR ID FECHA_PAR NOVA_LINHA

    ABRE_PAR        shift and go to state 51


state 33

    (15) declaracao -> declara_var .

    FIM             reduce using rule 15 (declaracao -> declara_var .)
    SE              reduce using rule 15 (declaracao -> declara_var .)
    REPITA          reduce using rule 15 (declaracao -> declara_var .)
    ID              reduce using rule 15 (declaracao -> declara_var .)
    LEIA            reduce using rule 15 (declaracao -> declara_var .)
    ESCREVA         reduce using rule 15 (declaracao -> declara_var .)
    RETORNA         reduce using rule 15 (declaracao -> declara_var .)
    VAZIO           reduce using rule 15 (declaracao -> declara_var .)
    INTEIRO         reduce using rule 15 (declaracao -> declara_var .)
    FLUTUANTE       reduce using rule 15 (declaracao -> declara_var .)
    ATE             reduce using rule 15 (declaracao -> declara_var .)
    SENAO           reduce using rule 15 (declaracao -> declara_var .)


state 34

    (13) declaracao -> leia_decl .

    FIM             reduce using rule 13 (declaracao -> leia_decl .)
    SE              reduce using rule 13 (declaracao -> leia_decl .)
    REPITA          reduce using rule 13 (declaracao -> leia_decl .)
    ID              reduce using rule 13 (declaracao -> leia_decl .)
    LEIA            reduce using rule 13 (declaracao -> leia_decl .)
    ESCREVA         reduce using rule 13 (declaracao -> leia_decl .)
    RETORNA         reduce using rule 13 (declaracao -> leia_decl .)
    VAZIO           reduce using rule 13 (declaracao -> leia_decl .)
    INTEIRO         reduce using rule 13 (declaracao -> leia_decl .)
    FLUTUANTE       reduce using rule 13 (declaracao -> leia_decl .)
    ATE             reduce using rule 13 (declaracao -> leia_decl .)
    SENAO           reduce using rule 13 (declaracao -> leia_decl .)


state 35

    (14) declaracao -> escreva_decl .

    FIM             reduce using rule 14 (declaracao -> escreva_decl .)
    SE              reduce using rule 14 (declaracao -> escreva_decl .)
    REPITA          reduce using rule 14 (declaracao -> escreva_decl .)
    ID              reduce using rule 14 (declaracao -> escreva_decl .)
    LEIA            reduce using rule 14 (declaracao -> escreva_decl .)
    ESCREVA         reduce using rule 14 (declaracao -> escreva_decl .)
    RETORNA         reduce using rule 14 (declaracao -> escreva_decl .)
    VAZIO           reduce using rule 14 (declaracao -> escreva_decl .)
    INTEIRO         reduce using rule 14 (declaracao -> escreva_decl .)
    FLUTUANTE       reduce using rule 14 (declaracao -> escreva_decl .)
    ATE             reduce using rule 14 (declaracao -> escreva_decl .)
    SENAO           reduce using rule 14 (declaracao -> escreva_decl .)


state 36

    (17) declaracao -> chamada_func .

    FIM             reduce using rule 17 (declaracao -> chamada_func .)
    SE              reduce using rule 17 (declaracao -> chamada_func .)
    REPITA          reduce using rule 17 (declaracao -> chamada_func .)
    ID              reduce using rule 17 (declaracao -> chamada_func .)
    LEIA            reduce using rule 17 (declaracao -> chamada_func .)
    ESCREVA         reduce using rule 17 (declaracao -> chamada_func .)
    RETORNA         reduce using rule 17 (declaracao -> chamada_func .)
    VAZIO           reduce using rule 17 (declaracao -> chamada_func .)
    INTEIRO         reduce using rule 17 (declaracao -> chamada_func .)
    FLUTUANTE       reduce using rule 17 (declaracao -> chamada_func .)
    ATE             reduce using rule 17 (declaracao -> chamada_func .)
    SENAO           reduce using rule 17 (declaracao -> chamada_func .)


state 37

    (18) retorna_decl -> RETORNA . ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> RETORNA . ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA

    ABRE_PAR        shift and go to state 52


state 38

    (22) se_decl -> SE . exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> SE . exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (35) exp_decl -> . simples_exp
    (36) exp_decl -> . simples_exp compara_op simples_exp
    (42) simples_exp -> . termo
    (43) simples_exp -> . simples_exp soma_sub termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    exp_decl                       shift and go to state 59
    termo                          shift and go to state 60
    simples_exp                    shift and go to state 61
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 39

    (16) declaracao -> retorna_decl .

    FIM             reduce using rule 16 (declaracao -> retorna_decl .)
    SE              reduce using rule 16 (declaracao -> retorna_decl .)
    REPITA          reduce using rule 16 (declaracao -> retorna_decl .)
    ID              reduce using rule 16 (declaracao -> retorna_decl .)
    LEIA            reduce using rule 16 (declaracao -> retorna_decl .)
    ESCREVA         reduce using rule 16 (declaracao -> retorna_decl .)
    RETORNA         reduce using rule 16 (declaracao -> retorna_decl .)
    VAZIO           reduce using rule 16 (declaracao -> retorna_decl .)
    INTEIRO         reduce using rule 16 (declaracao -> retorna_decl .)
    FLUTUANTE       reduce using rule 16 (declaracao -> retorna_decl .)
    ATE             reduce using rule 16 (declaracao -> retorna_decl .)
    SENAO           reduce using rule 16 (declaracao -> retorna_decl .)


state 40

    (53) declara_var -> tipo . DOIS_PONTOS ID NOVA_LINHA

    DOIS_PONTOS     shift and go to state 14


state 41

    (8) sequencia_decl -> declaracao .

    FIM             reduce using rule 8 (sequencia_decl -> declaracao .)
    SE              reduce using rule 8 (sequencia_decl -> declaracao .)
    REPITA          reduce using rule 8 (sequencia_decl -> declaracao .)
    ID              reduce using rule 8 (sequencia_decl -> declaracao .)
    LEIA            reduce using rule 8 (sequencia_decl -> declaracao .)
    ESCREVA         reduce using rule 8 (sequencia_decl -> declaracao .)
    RETORNA         reduce using rule 8 (sequencia_decl -> declaracao .)
    VAZIO           reduce using rule 8 (sequencia_decl -> declaracao .)
    INTEIRO         reduce using rule 8 (sequencia_decl -> declaracao .)
    FLUTUANTE       reduce using rule 8 (sequencia_decl -> declaracao .)
    ATE             reduce using rule 8 (sequencia_decl -> declaracao .)
    SENAO           reduce using rule 8 (sequencia_decl -> declaracao .)


state 42

    (4) principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl . FIM
    (9) sequencia_decl -> sequencia_decl . declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    FIM             shift and go to state 63
    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 62
    repita_decl                    shift and go to state 30
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    atribuicao_decl                shift and go to state 45
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36

state 43

    (27) escreva_decl -> ESCREVA . ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> ESCREVA . ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA

    ABRE_PAR        shift and go to state 64


state 44

    (24) repita_decl -> REPITA . NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA

    NOVA_LINHA      shift and go to state 65


state 45

    (12) declaracao -> atribuicao_decl .

    FIM             reduce using rule 12 (declaracao -> atribuicao_decl .)
    SE              reduce using rule 12 (declaracao -> atribuicao_decl .)
    REPITA          reduce using rule 12 (declaracao -> atribuicao_decl .)
    ID              reduce using rule 12 (declaracao -> atribuicao_decl .)
    LEIA            reduce using rule 12 (declaracao -> atribuicao_decl .)
    ESCREVA         reduce using rule 12 (declaracao -> atribuicao_decl .)
    RETORNA         reduce using rule 12 (declaracao -> atribuicao_decl .)
    VAZIO           reduce using rule 12 (declaracao -> atribuicao_decl .)
    INTEIRO         reduce using rule 12 (declaracao -> atribuicao_decl .)
    FLUTUANTE       reduce using rule 12 (declaracao -> atribuicao_decl .)
    ATE             reduce using rule 12 (declaracao -> atribuicao_decl .)
    SENAO           reduce using rule 12 (declaracao -> atribuicao_decl .)


state 46

    (55) parametro_decl -> tipo DOIS_PONTOS ID .

    FECHA_PAR       reduce using rule 55 (parametro_decl -> tipo DOIS_PONTOS ID .)
    VIRGULA         reduce using rule 55 (parametro_decl -> tipo DOIS_PONTOS ID .)


state 47

    (54) parametro_decl -> parametro_decl VIRGULA tipo . DOIS_PONTOS ID

    DOIS_PONTOS     shift and go to state 66


state 48

    (7) func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA . sequencia_decl FIM NOVA_LINHA
    (8) sequencia_decl -> . declaracao
    (9) sequencia_decl -> . sequencia_decl declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 41
    repita_decl                    shift and go to state 30
    sequencia_decl                 shift and go to state 67
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    chamada_func                   shift and go to state 36
    escreva_decl                   shift and go to state 35
    atribuicao_decl                shift and go to state 45

state 49

    (25) atribuicao_decl -> ID ATRIBUICAO . exp_decl NOVA_LINHA
    (35) exp_decl -> . simples_exp
    (36) exp_decl -> . simples_exp compara_op simples_exp
    (42) simples_exp -> . termo
    (43) simples_exp -> . simples_exp soma_sub termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    exp_decl                       shift and go to state 68
    termo                          shift and go to state 60
    simples_exp                    shift and go to state 61
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 50

    (29) chamada_func -> ID ABRE_PAR . parametro_chama_func FECHA_PAR NOVA_LINHA
    (31) parametro_chama_func -> . parametro_chama_func VIRGULA ID
    (32) parametro_chama_func -> . parametro_chama_func VIRGULA numero_decl
    (33) parametro_chama_func -> . ID
    (34) parametro_chama_func -> . numero_decl
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 71
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    parametro_chama_func           shift and go to state 69
    numero_decl                    shift and go to state 70

state 51

    (26) leia_decl -> LEIA ABRE_PAR . ID FECHA_PAR NOVA_LINHA

    ID              shift and go to state 72


state 52

    (18) retorna_decl -> RETORNA ABRE_PAR . ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> RETORNA ABRE_PAR . numero_decl FECHA_PAR NOVA_LINHA
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 74
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    numero_decl                    shift and go to state 73

state 53

    (20) numero_decl -> INTEIRO .

    MULT            reduce using rule 20 (numero_decl -> INTEIRO .)
    DIVISAO         reduce using rule 20 (numero_decl -> INTEIRO .)
    IGUAL           reduce using rule 20 (numero_decl -> INTEIRO .)
    MENOR           reduce using rule 20 (numero_decl -> INTEIRO .)
    MAIOR           reduce using rule 20 (numero_decl -> INTEIRO .)
    MENOR_IGUAL     reduce using rule 20 (numero_decl -> INTEIRO .)
    MAIOR_IGUAL     reduce using rule 20 (numero_decl -> INTEIRO .)
    SOMA            reduce using rule 20 (numero_decl -> INTEIRO .)
    SUB             reduce using rule 20 (numero_decl -> INTEIRO .)
    NOVA_LINHA      reduce using rule 20 (numero_decl -> INTEIRO .)
    ENTAO           reduce using rule 20 (numero_decl -> INTEIRO .)
    FECHA_PAR       reduce using rule 20 (numero_decl -> INTEIRO .)
    VIRGULA         reduce using rule 20 (numero_decl -> INTEIRO .)


state 54

    (52) fator -> ABRE_PAR . exp_decl FECHA_PAR
    (35) exp_decl -> . simples_exp
    (36) exp_decl -> . simples_exp compara_op simples_exp
    (42) simples_exp -> . termo
    (43) simples_exp -> . simples_exp soma_sub termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    exp_decl                       shift and go to state 75
    termo                          shift and go to state 60
    simples_exp                    shift and go to state 61
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 55

    (46) termo -> fator .

    MULT            reduce using rule 46 (termo -> fator .)
    DIVISAO         reduce using rule 46 (termo -> fator .)
    SOMA            reduce using rule 46 (termo -> fator .)
    SUB             reduce using rule 46 (termo -> fator .)
    ENTAO           reduce using rule 46 (termo -> fator .)
    NOVA_LINHA      reduce using rule 46 (termo -> fator .)
    FECHA_PAR       reduce using rule 46 (termo -> fator .)
    IGUAL           reduce using rule 46 (termo -> fator .)
    MENOR           reduce using rule 46 (termo -> fator .)
    MAIOR           reduce using rule 46 (termo -> fator .)
    MENOR_IGUAL     reduce using rule 46 (termo -> fator .)
    MAIOR_IGUAL     reduce using rule 46 (termo -> fator .)


state 56

    (50) fator -> ID .

    MULT            reduce using rule 50 (fator -> ID .)
    DIVISAO         reduce using rule 50 (fator -> ID .)
    IGUAL           reduce using rule 50 (fator -> ID .)
    MENOR           reduce using rule 50 (fator -> ID .)
    MAIOR           reduce using rule 50 (fator -> ID .)
    MENOR_IGUAL     reduce using rule 50 (fator -> ID .)
    MAIOR_IGUAL     reduce using rule 50 (fator -> ID .)
    SOMA            reduce using rule 50 (fator -> ID .)
    SUB             reduce using rule 50 (fator -> ID .)
    ENTAO           reduce using rule 50 (fator -> ID .)
    NOVA_LINHA      reduce using rule 50 (fator -> ID .)
    FECHA_PAR       reduce using rule 50 (fator -> ID .)


state 57

    (21) numero_decl -> FLUTUANTE .

    MULT            reduce using rule 21 (numero_decl -> FLUTUANTE .)
    DIVISAO         reduce using rule 21 (numero_decl -> FLUTUANTE .)
    IGUAL           reduce using rule 21 (numero_decl -> FLUTUANTE .)
    MENOR           reduce using rule 21 (numero_decl -> FLUTUANTE .)
    MAIOR           reduce using rule 21 (numero_decl -> FLUTUANTE .)
    MENOR_IGUAL     reduce using rule 21 (numero_decl -> FLUTUANTE .)
    MAIOR_IGUAL     reduce using rule 21 (numero_decl -> FLUTUANTE .)
    SOMA            reduce using rule 21 (numero_decl -> FLUTUANTE .)
    SUB             reduce using rule 21 (numero_decl -> FLUTUANTE .)
    NOVA_LINHA      reduce using rule 21 (numero_decl -> FLUTUANTE .)
    ENTAO           reduce using rule 21 (numero_decl -> FLUTUANTE .)
    FECHA_PAR       reduce using rule 21 (numero_decl -> FLUTUANTE .)
    VIRGULA         reduce using rule 21 (numero_decl -> FLUTUANTE .)


state 58

    (51) fator -> numero_decl .

    MULT            reduce using rule 51 (fator -> numero_decl .)
    DIVISAO         reduce using rule 51 (fator -> numero_decl .)
    IGUAL           reduce using rule 51 (fator -> numero_decl .)
    MENOR           reduce using rule 51 (fator -> numero_decl .)
    MAIOR           reduce using rule 51 (fator -> numero_decl .)
    MENOR_IGUAL     reduce using rule 51 (fator -> numero_decl .)
    MAIOR_IGUAL     reduce using rule 51 (fator -> numero_decl .)
    SOMA            reduce using rule 51 (fator -> numero_decl .)
    SUB             reduce using rule 51 (fator -> numero_decl .)
    ENTAO           reduce using rule 51 (fator -> numero_decl .)
    NOVA_LINHA      reduce using rule 51 (fator -> numero_decl .)
    FECHA_PAR       reduce using rule 51 (fator -> numero_decl .)


state 59

    (22) se_decl -> SE exp_decl . ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> SE exp_decl . ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    ENTAO           shift and go to state 76


state 60

    (42) simples_exp -> termo .
    (47) termo -> termo . mult_div fator
    (48) mult_div -> . MULT
    (49) mult_div -> . DIVISAO

    IGUAL           reduce using rule 42 (simples_exp -> termo .)
    MENOR           reduce using rule 42 (simples_exp -> termo .)
    MAIOR           reduce using rule 42 (simples_exp -> termo .)
    MENOR_IGUAL     reduce using rule 42 (simples_exp -> termo .)
    MAIOR_IGUAL     reduce using rule 42 (simples_exp -> termo .)
    SOMA            reduce using rule 42 (simples_exp -> termo .)
    SUB             reduce using rule 42 (simples_exp -> termo .)
    NOVA_LINHA      reduce using rule 42 (simples_exp -> termo .)
    FECHA_PAR       reduce using rule 42 (simples_exp -> termo .)
    ENTAO           reduce using rule 42 (simples_exp -> termo .)
    MULT            shift and go to state 79
    DIVISAO         shift and go to state 78

    mult_div                       shift and go to state 77

state 61

    (35) exp_decl -> simples_exp .
    (36) exp_decl -> simples_exp . compara_op simples_exp
    (43) simples_exp -> simples_exp . soma_sub termo
    (37) compara_op -> . IGUAL
    (38) compara_op -> . MENOR
    (39) compara_op -> . MAIOR
    (40) compara_op -> . MENOR_IGUAL
    (41) compara_op -> . MAIOR_IGUAL
    (44) soma_sub -> . SOMA
    (45) soma_sub -> . SUB

    FECHA_PAR       reduce using rule 35 (exp_decl -> simples_exp .)
    NOVA_LINHA      reduce using rule 35 (exp_decl -> simples_exp .)
    ENTAO           reduce using rule 35 (exp_decl -> simples_exp .)
    IGUAL           shift and go to state 88
    MENOR           shift and go to state 84
    MAIOR           shift and go to state 82
    MENOR_IGUAL     shift and go to state 80
    MAIOR_IGUAL     shift and go to state 87
    SOMA            shift and go to state 83
    SUB             shift and go to state 86

    compara_op                     shift and go to state 81
    soma_sub                       shift and go to state 85

state 62

    (9) sequencia_decl -> sequencia_decl declaracao .

    FIM             reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    SE              reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    REPITA          reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    ID              reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    LEIA            reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    ESCREVA         reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    RETORNA         reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    VAZIO           reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    INTEIRO         reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    FLUTUANTE       reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    ATE             reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)
    SENAO           reduce using rule 9 (sequencia_decl -> sequencia_decl declaracao .)


state 63

    (4) principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM .

    $end            reduce using rule 4 (principal -> VAZIO PRINCIPAL ABRE_PAR FECHA_PAR NOVA_LINHA sequencia_decl FIM .)


state 64

    (27) escreva_decl -> ESCREVA ABRE_PAR . exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> ESCREVA ABRE_PAR . chamada_func_escreva FECHA_PAR NOVA_LINHA
    (35) exp_decl -> . simples_exp
    (36) exp_decl -> . simples_exp compara_op simples_exp
    (30) chamada_func_escreva -> . ID ABRE_PAR parametro_chama_func FECHA_PAR
    (42) simples_exp -> . termo
    (43) simples_exp -> . simples_exp soma_sub termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 89
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    exp_decl                       shift and go to state 90
    termo                          shift and go to state 60
    chamada_func_escreva           shift and go to state 91
    simples_exp                    shift and go to state 61
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 65

    (24) repita_decl -> REPITA NOVA_LINHA . sequencia_decl ATE exp_decl NOVA_LINHA
    (8) sequencia_decl -> . declaracao
    (9) sequencia_decl -> . sequencia_decl declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 41
    repita_decl                    shift and go to state 30
    sequencia_decl                 shift and go to state 92
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36
    atribuicao_decl                shift and go to state 45

state 66

    (54) parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS . ID

    ID              shift and go to state 93


state 67

    (7) func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl . FIM NOVA_LINHA
    (9) sequencia_decl -> sequencia_decl . declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    FIM             shift and go to state 94
    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 62
    repita_decl                    shift and go to state 30
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    chamada_func                   shift and go to state 36
    escreva_decl                   shift and go to state 35
    atribuicao_decl                shift and go to state 45

state 68

    (25) atribuicao_decl -> ID ATRIBUICAO exp_decl . NOVA_LINHA

    NOVA_LINHA      shift and go to state 95


state 69

    (29) chamada_func -> ID ABRE_PAR parametro_chama_func . FECHA_PAR NOVA_LINHA
    (31) parametro_chama_func -> parametro_chama_func . VIRGULA ID
    (32) parametro_chama_func -> parametro_chama_func . VIRGULA numero_decl

    FECHA_PAR       shift and go to state 97
    VIRGULA         shift and go to state 96


state 70

    (34) parametro_chama_func -> numero_decl .

    FECHA_PAR       reduce using rule 34 (parametro_chama_func -> numero_decl .)
    VIRGULA         reduce using rule 34 (parametro_chama_func -> numero_decl .)


state 71

    (33) parametro_chama_func -> ID .

    FECHA_PAR       reduce using rule 33 (parametro_chama_func -> ID .)
    VIRGULA         reduce using rule 33 (parametro_chama_func -> ID .)


state 72

    (26) leia_decl -> LEIA ABRE_PAR ID . FECHA_PAR NOVA_LINHA

    FECHA_PAR       shift and go to state 98


state 73

    (19) retorna_decl -> RETORNA ABRE_PAR numero_decl . FECHA_PAR NOVA_LINHA

    FECHA_PAR       shift and go to state 99


state 74

    (18) retorna_decl -> RETORNA ABRE_PAR ID . FECHA_PAR NOVA_LINHA

    FECHA_PAR       shift and go to state 100


state 75

    (52) fator -> ABRE_PAR exp_decl . FECHA_PAR

    FECHA_PAR       shift and go to state 101


state 76

    (22) se_decl -> SE exp_decl ENTAO . NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> SE exp_decl ENTAO . NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    NOVA_LINHA      shift and go to state 102


state 77

    (47) termo -> termo mult_div . fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    fator                          shift and go to state 103
    numero_decl                    shift and go to state 58

state 78

    (49) mult_div -> DIVISAO .

    ID              reduce using rule 49 (mult_div -> DIVISAO .)
    ABRE_PAR        reduce using rule 49 (mult_div -> DIVISAO .)
    INTEIRO         reduce using rule 49 (mult_div -> DIVISAO .)
    FLUTUANTE       reduce using rule 49 (mult_div -> DIVISAO .)


state 79

    (48) mult_div -> MULT .

    ID              reduce using rule 48 (mult_div -> MULT .)
    ABRE_PAR        reduce using rule 48 (mult_div -> MULT .)
    INTEIRO         reduce using rule 48 (mult_div -> MULT .)
    FLUTUANTE       reduce using rule 48 (mult_div -> MULT .)


state 80

    (40) compara_op -> MENOR_IGUAL .

    ID              reduce using rule 40 (compara_op -> MENOR_IGUAL .)
    ABRE_PAR        reduce using rule 40 (compara_op -> MENOR_IGUAL .)
    INTEIRO         reduce using rule 40 (compara_op -> MENOR_IGUAL .)
    FLUTUANTE       reduce using rule 40 (compara_op -> MENOR_IGUAL .)


state 81

    (36) exp_decl -> simples_exp compara_op . simples_exp
    (42) simples_exp -> . termo
    (43) simples_exp -> . simples_exp soma_sub termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    termo                          shift and go to state 60
    simples_exp                    shift and go to state 104
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 82

    (39) compara_op -> MAIOR .

    ID              reduce using rule 39 (compara_op -> MAIOR .)
    ABRE_PAR        reduce using rule 39 (compara_op -> MAIOR .)
    INTEIRO         reduce using rule 39 (compara_op -> MAIOR .)
    FLUTUANTE       reduce using rule 39 (compara_op -> MAIOR .)


state 83

    (44) soma_sub -> SOMA .

    ID              reduce using rule 44 (soma_sub -> SOMA .)
    ABRE_PAR        reduce using rule 44 (soma_sub -> SOMA .)
    INTEIRO         reduce using rule 44 (soma_sub -> SOMA .)
    FLUTUANTE       reduce using rule 44 (soma_sub -> SOMA .)


state 84

    (38) compara_op -> MENOR .

    ID              reduce using rule 38 (compara_op -> MENOR .)
    ABRE_PAR        reduce using rule 38 (compara_op -> MENOR .)
    INTEIRO         reduce using rule 38 (compara_op -> MENOR .)
    FLUTUANTE       reduce using rule 38 (compara_op -> MENOR .)


state 85

    (43) simples_exp -> simples_exp soma_sub . termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    termo                          shift and go to state 105
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 86

    (45) soma_sub -> SUB .

    ID              reduce using rule 45 (soma_sub -> SUB .)
    ABRE_PAR        reduce using rule 45 (soma_sub -> SUB .)
    INTEIRO         reduce using rule 45 (soma_sub -> SUB .)
    FLUTUANTE       reduce using rule 45 (soma_sub -> SUB .)


state 87

    (41) compara_op -> MAIOR_IGUAL .

    ID              reduce using rule 41 (compara_op -> MAIOR_IGUAL .)
    ABRE_PAR        reduce using rule 41 (compara_op -> MAIOR_IGUAL .)
    INTEIRO         reduce using rule 41 (compara_op -> MAIOR_IGUAL .)
    FLUTUANTE       reduce using rule 41 (compara_op -> MAIOR_IGUAL .)


state 88

    (37) compara_op -> IGUAL .

    ID              reduce using rule 37 (compara_op -> IGUAL .)
    ABRE_PAR        reduce using rule 37 (compara_op -> IGUAL .)
    INTEIRO         reduce using rule 37 (compara_op -> IGUAL .)
    FLUTUANTE       reduce using rule 37 (compara_op -> IGUAL .)


state 89

    (30) chamada_func_escreva -> ID . ABRE_PAR parametro_chama_func FECHA_PAR
    (50) fator -> ID .

    ABRE_PAR        shift and go to state 106
    MULT            reduce using rule 50 (fator -> ID .)
    DIVISAO         reduce using rule 50 (fator -> ID .)
    IGUAL           reduce using rule 50 (fator -> ID .)
    MENOR           reduce using rule 50 (fator -> ID .)
    MAIOR           reduce using rule 50 (fator -> ID .)
    MENOR_IGUAL     reduce using rule 50 (fator -> ID .)
    MAIOR_IGUAL     reduce using rule 50 (fator -> ID .)
    SOMA            reduce using rule 50 (fator -> ID .)
    SUB             reduce using rule 50 (fator -> ID .)
    FECHA_PAR       reduce using rule 50 (fator -> ID .)


state 90

    (27) escreva_decl -> ESCREVA ABRE_PAR exp_decl . FECHA_PAR NOVA_LINHA

    FECHA_PAR       shift and go to state 107


state 91

    (28) escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva . FECHA_PAR NOVA_LINHA

    FECHA_PAR       shift and go to state 108


state 92

    (24) repita_decl -> REPITA NOVA_LINHA sequencia_decl . ATE exp_decl NOVA_LINHA
    (9) sequencia_decl -> sequencia_decl . declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    ATE             shift and go to state 109
    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 62
    repita_decl                    shift and go to state 30
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36
    atribuicao_decl                shift and go to state 45

state 93

    (54) parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID .

    FECHA_PAR       reduce using rule 54 (parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID .)
    VIRGULA         reduce using rule 54 (parametro_decl -> parametro_decl VIRGULA tipo DOIS_PONTOS ID .)


state 94

    (7) func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM . NOVA_LINHA

    NOVA_LINHA      shift and go to state 110


state 95

    (25) atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .

    FIM             reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    SE              reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    REPITA          reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    ID              reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    LEIA            reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    ESCREVA         reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    RETORNA         reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    VAZIO           reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    INTEIRO         reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    FLUTUANTE       reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    ATE             reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)
    SENAO           reduce using rule 25 (atribuicao_decl -> ID ATRIBUICAO exp_decl NOVA_LINHA .)


state 96

    (31) parametro_chama_func -> parametro_chama_func VIRGULA . ID
    (32) parametro_chama_func -> parametro_chama_func VIRGULA . numero_decl
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 111
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    numero_decl                    shift and go to state 112

state 97

    (29) chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR . NOVA_LINHA

    NOVA_LINHA      shift and go to state 113


state 98

    (26) leia_decl -> LEIA ABRE_PAR ID FECHA_PAR . NOVA_LINHA

    NOVA_LINHA      shift and go to state 114


state 99

    (19) retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR . NOVA_LINHA

    NOVA_LINHA      shift and go to state 115


state 100

    (18) retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR . NOVA_LINHA

    NOVA_LINHA      shift and go to state 116


state 101

    (52) fator -> ABRE_PAR exp_decl FECHA_PAR .

    MULT            reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    DIVISAO         reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    IGUAL           reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    MENOR           reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    MAIOR           reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    MENOR_IGUAL     reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    MAIOR_IGUAL     reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    SOMA            reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    SUB             reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    ENTAO           reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    NOVA_LINHA      reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)
    FECHA_PAR       reduce using rule 52 (fator -> ABRE_PAR exp_decl FECHA_PAR .)


state 102

    (22) se_decl -> SE exp_decl ENTAO NOVA_LINHA . sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA . sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (8) sequencia_decl -> . declaracao
    (9) sequencia_decl -> . sequencia_decl declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 41
    repita_decl                    shift and go to state 30
    sequencia_decl                 shift and go to state 117
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36
    atribuicao_decl                shift and go to state 45

state 103

    (47) termo -> termo mult_div fator .

    MULT            reduce using rule 47 (termo -> termo mult_div fator .)
    DIVISAO         reduce using rule 47 (termo -> termo mult_div fator .)
    SOMA            reduce using rule 47 (termo -> termo mult_div fator .)
    SUB             reduce using rule 47 (termo -> termo mult_div fator .)
    ENTAO           reduce using rule 47 (termo -> termo mult_div fator .)
    NOVA_LINHA      reduce using rule 47 (termo -> termo mult_div fator .)
    FECHA_PAR       reduce using rule 47 (termo -> termo mult_div fator .)
    IGUAL           reduce using rule 47 (termo -> termo mult_div fator .)
    MENOR           reduce using rule 47 (termo -> termo mult_div fator .)
    MAIOR           reduce using rule 47 (termo -> termo mult_div fator .)
    MENOR_IGUAL     reduce using rule 47 (termo -> termo mult_div fator .)
    MAIOR_IGUAL     reduce using rule 47 (termo -> termo mult_div fator .)


state 104

    (36) exp_decl -> simples_exp compara_op simples_exp .
    (43) simples_exp -> simples_exp . soma_sub termo
    (44) soma_sub -> . SOMA
    (45) soma_sub -> . SUB

    FECHA_PAR       reduce using rule 36 (exp_decl -> simples_exp compara_op simples_exp .)
    NOVA_LINHA      reduce using rule 36 (exp_decl -> simples_exp compara_op simples_exp .)
    ENTAO           reduce using rule 36 (exp_decl -> simples_exp compara_op simples_exp .)
    SOMA            shift and go to state 83
    SUB             shift and go to state 86

    soma_sub                       shift and go to state 85

state 105

    (43) simples_exp -> simples_exp soma_sub termo .
    (47) termo -> termo . mult_div fator
    (48) mult_div -> . MULT
    (49) mult_div -> . DIVISAO

    IGUAL           reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    MENOR           reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    MAIOR           reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    MENOR_IGUAL     reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    MAIOR_IGUAL     reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    SOMA            reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    SUB             reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    NOVA_LINHA      reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    FECHA_PAR       reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    ENTAO           reduce using rule 43 (simples_exp -> simples_exp soma_sub termo .)
    MULT            shift and go to state 79
    DIVISAO         shift and go to state 78

    mult_div                       shift and go to state 77

state 106

    (30) chamada_func_escreva -> ID ABRE_PAR . parametro_chama_func FECHA_PAR
    (31) parametro_chama_func -> . parametro_chama_func VIRGULA ID
    (32) parametro_chama_func -> . parametro_chama_func VIRGULA numero_decl
    (33) parametro_chama_func -> . ID
    (34) parametro_chama_func -> . numero_decl
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 71
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    parametro_chama_func           shift and go to state 118
    numero_decl                    shift and go to state 70

state 107

    (27) escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR . NOVA_LINHA

    NOVA_LINHA      shift and go to state 119


state 108

    (28) escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR . NOVA_LINHA

    NOVA_LINHA      shift and go to state 120


state 109

    (24) repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE . exp_decl NOVA_LINHA
    (35) exp_decl -> . simples_exp
    (36) exp_decl -> . simples_exp compara_op simples_exp
    (42) simples_exp -> . termo
    (43) simples_exp -> . simples_exp soma_sub termo
    (46) termo -> . fator
    (47) termo -> . termo mult_div fator
    (50) fator -> . ID
    (51) fator -> . numero_decl
    (52) fator -> . ABRE_PAR exp_decl FECHA_PAR
    (20) numero_decl -> . INTEIRO
    (21) numero_decl -> . FLUTUANTE

    ID              shift and go to state 56
    ABRE_PAR        shift and go to state 54
    INTEIRO         shift and go to state 53
    FLUTUANTE       shift and go to state 57

    exp_decl                       shift and go to state 121
    termo                          shift and go to state 60
    simples_exp                    shift and go to state 61
    fator                          shift and go to state 55
    numero_decl                    shift and go to state 58

state 110

    (7) func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA .

    VAZIO           reduce using rule 7 (func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    INTEIRO         reduce using rule 7 (func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    FLUTUANTE       reduce using rule 7 (func_decl -> tipo ID ABRE_PAR parametro_decl FECHA_PAR NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)


state 111

    (31) parametro_chama_func -> parametro_chama_func VIRGULA ID .

    FECHA_PAR       reduce using rule 31 (parametro_chama_func -> parametro_chama_func VIRGULA ID .)
    VIRGULA         reduce using rule 31 (parametro_chama_func -> parametro_chama_func VIRGULA ID .)


state 112

    (32) parametro_chama_func -> parametro_chama_func VIRGULA numero_decl .

    FECHA_PAR       reduce using rule 32 (parametro_chama_func -> parametro_chama_func VIRGULA numero_decl .)
    VIRGULA         reduce using rule 32 (parametro_chama_func -> parametro_chama_func VIRGULA numero_decl .)


state 113

    (29) chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .

    FIM             reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    SE              reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    REPITA          reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    ID              reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    LEIA            reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    ESCREVA         reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    RETORNA         reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    VAZIO           reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    INTEIRO         reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    FLUTUANTE       reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    ATE             reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)
    SENAO           reduce using rule 29 (chamada_func -> ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA .)


state 114

    (26) leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .

    FIM             reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    SENAO           reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    SE              reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    REPITA          reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    ID              reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    LEIA            reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    ESCREVA         reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    RETORNA         reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    VAZIO           reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    INTEIRO         reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    FLUTUANTE       reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    ATE             reduce using rule 26 (leia_decl -> LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)


state 115

    (19) retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .

    ATE             reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    SE              reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    REPITA          reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    ID              reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    LEIA            reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    ESCREVA         reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    RETORNA         reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    VAZIO           reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    INTEIRO         reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    FLUTUANTE       reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    FIM             reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)
    SENAO           reduce using rule 19 (retorna_decl -> RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA .)


state 116

    (18) retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .

    ATE             reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    SE              reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    REPITA          reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    ID              reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    LEIA            reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    ESCREVA         reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    RETORNA         reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    VAZIO           reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    INTEIRO         reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    FLUTUANTE       reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    FIM             reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)
    SENAO           reduce using rule 18 (retorna_decl -> RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA .)


state 117

    (22) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl . FIM NOVA_LINHA
    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl . SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (9) sequencia_decl -> sequencia_decl . declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    FIM             shift and go to state 123
    SENAO           shift and go to state 122
    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 62
    repita_decl                    shift and go to state 30
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36
    atribuicao_decl                shift and go to state 45

state 118

    (30) chamada_func_escreva -> ID ABRE_PAR parametro_chama_func . FECHA_PAR
    (31) parametro_chama_func -> parametro_chama_func . VIRGULA ID
    (32) parametro_chama_func -> parametro_chama_func . VIRGULA numero_decl

    FECHA_PAR       shift and go to state 124
    VIRGULA         shift and go to state 96


state 119

    (27) escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .

    FIM             reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    SE              reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    REPITA          reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    ID              reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    LEIA            reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    ESCREVA         reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    RETORNA         reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    VAZIO           reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    INTEIRO         reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    FLUTUANTE       reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    SENAO           reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)
    ATE             reduce using rule 27 (escreva_decl -> ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA .)


state 120

    (28) escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .

    FIM             reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    SE              reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    REPITA          reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    ID              reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    LEIA            reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    ESCREVA         reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    RETORNA         reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    VAZIO           reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    INTEIRO         reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    FLUTUANTE       reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    SENAO           reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)
    ATE             reduce using rule 28 (escreva_decl -> ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA .)


state 121

    (24) repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl . NOVA_LINHA

    NOVA_LINHA      shift and go to state 125


state 122

    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO . NOVA_LINHA sequencia_decl FIM NOVA_LINHA

    NOVA_LINHA      shift and go to state 126


state 123

    (22) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM . NOVA_LINHA

    NOVA_LINHA      shift and go to state 127


state 124

    (30) chamada_func_escreva -> ID ABRE_PAR parametro_chama_func FECHA_PAR .

    FECHA_PAR       reduce using rule 30 (chamada_func_escreva -> ID ABRE_PAR parametro_chama_func FECHA_PAR .)


state 125

    (24) repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .

    FIM             reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    SE              reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    REPITA          reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    ID              reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    LEIA            reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    ESCREVA         reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    RETORNA         reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    VAZIO           reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    INTEIRO         reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    FLUTUANTE       reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    ATE             reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)
    SENAO           reduce using rule 24 (repita_decl -> REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA .)


state 126

    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA . sequencia_decl FIM NOVA_LINHA
    (8) sequencia_decl -> . declaracao
    (9) sequencia_decl -> . sequencia_decl declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 41
    repita_decl                    shift and go to state 30
    sequencia_decl                 shift and go to state 128
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36
    atribuicao_decl                shift and go to state 45

state 127

    (22) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .

    FIM             reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    SE              reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    REPITA          reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    ID              reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    LEIA            reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    ESCREVA         reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    RETORNA         reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    VAZIO           reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    INTEIRO         reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    FLUTUANTE       reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    ATE             reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    SENAO           reduce using rule 22 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)


state 128

    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl . FIM NOVA_LINHA
    (9) sequencia_decl -> sequencia_decl . declaracao
    (10) declaracao -> . se_decl
    (11) declaracao -> . repita_decl
    (12) declaracao -> . atribuicao_decl
    (13) declaracao -> . leia_decl
    (14) declaracao -> . escreva_decl
    (15) declaracao -> . declara_var
    (16) declaracao -> . retorna_decl
    (17) declaracao -> . chamada_func
    (22) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (23) se_decl -> . SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA
    (24) repita_decl -> . REPITA NOVA_LINHA sequencia_decl ATE exp_decl NOVA_LINHA
    (25) atribuicao_decl -> . ID ATRIBUICAO exp_decl NOVA_LINHA
    (26) leia_decl -> . LEIA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (27) escreva_decl -> . ESCREVA ABRE_PAR exp_decl FECHA_PAR NOVA_LINHA
    (28) escreva_decl -> . ESCREVA ABRE_PAR chamada_func_escreva FECHA_PAR NOVA_LINHA
    (53) declara_var -> . tipo DOIS_PONTOS ID NOVA_LINHA
    (18) retorna_decl -> . RETORNA ABRE_PAR ID FECHA_PAR NOVA_LINHA
    (19) retorna_decl -> . RETORNA ABRE_PAR numero_decl FECHA_PAR NOVA_LINHA
    (29) chamada_func -> . ID ABRE_PAR parametro_chama_func FECHA_PAR NOVA_LINHA
    (56) tipo -> . VAZIO
    (57) tipo -> . INTEIRO
    (58) tipo -> . FLUTUANTE

    FIM             shift and go to state 129
    SE              shift and go to state 38
    REPITA          shift and go to state 44
    ID              shift and go to state 29
    LEIA            shift and go to state 32
    ESCREVA         shift and go to state 43
    RETORNA         shift and go to state 37
    VAZIO           shift and go to state 22
    INTEIRO         shift and go to state 8
    FLUTUANTE       shift and go to state 9

    retorna_decl                   shift and go to state 39
    tipo                           shift and go to state 40
    declaracao                     shift and go to state 62
    repita_decl                    shift and go to state 30
    se_decl                        shift and go to state 31
    declara_var                    shift and go to state 33
    leia_decl                      shift and go to state 34
    escreva_decl                   shift and go to state 35
    chamada_func                   shift and go to state 36
    atribuicao_decl                shift and go to state 45

state 129

    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM . NOVA_LINHA

    NOVA_LINHA      shift and go to state 130


state 130

    (23) se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .

    FIM             reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    SE              reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    REPITA          reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    ID              reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    LEIA            reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    ESCREVA         reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    RETORNA         reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    VAZIO           reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    INTEIRO         reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    FLUTUANTE       reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    ATE             reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)
    SENAO           reduce using rule 23 (se_decl -> SE exp_decl ENTAO NOVA_LINHA sequencia_decl SENAO NOVA_LINHA sequencia_decl FIM NOVA_LINHA .)

